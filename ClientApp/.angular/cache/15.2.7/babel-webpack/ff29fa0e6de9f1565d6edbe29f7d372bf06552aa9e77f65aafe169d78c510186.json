{"ast":null,"code":"/* tslint:disable */\n/* eslint-disable */\nimport { HttpResponse } from '@angular/common/http';\nimport { filter, map } from 'rxjs/operators';\nimport { RequestBuilder } from '../../request-builder';\nexport function listFood$Plain(http, rootUrl, params, context) {\n  const rb = new RequestBuilder(rootUrl, listFood$Plain.PATH, 'get');\n  if (params) {\n    rb.query('id', params.id, {});\n    rb.path('email', params.email, {});\n  }\n  return http.request(rb.build({\n    responseType: 'text',\n    accept: 'text/plain',\n    context\n  })).pipe(filter(r => r instanceof HttpResponse), map(r => {\n    return r;\n  }));\n}\nlistFood$Plain.PATH = '/Food/list/{email}';","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAAkCA,YAAY,QAAQ,sBAAsB;AAE5E,SAASC,MAAM,EAAEC,GAAG,QAAQ,gBAAgB;AAE5C,SAASC,cAAc,QAAQ,uBAAuB;AAStD,OAAM,SAAUC,cAAc,CAACC,IAAgB,EAAEC,OAAe,EAAEC,MAA6B,EAAEC,OAAqB;EACpH,MAAMC,EAAE,GAAG,IAAIN,cAAc,CAACG,OAAO,EAAEF,cAAc,CAACM,IAAI,EAAE,KAAK,CAAC;EAClE,IAAIH,MAAM,EAAE;IACVE,EAAE,CAACE,KAAK,CAAC,IAAI,EAAEJ,MAAM,CAACK,EAAE,EAAE,EAAE,CAAC;IAC7BH,EAAE,CAACI,IAAI,CAAC,OAAO,EAAEN,MAAM,CAACO,KAAK,EAAE,EAAE,CAAC;;EAGpC,OAAOT,IAAI,CAACU,OAAO,CACjBN,EAAE,CAACO,KAAK,CAAC;IAAEC,YAAY,EAAE,MAAM;IAAEC,MAAM,EAAE,YAAY;IAAEV;EAAO,CAAE,CAAC,CAClE,CAACW,IAAI,CACJlB,MAAM,CAAEmB,CAAM,IAA6BA,CAAC,YAAYpB,YAAY,CAAC,EACrEE,GAAG,CAAEkB,CAAoB,IAAI;IAC3B,OAAOA,CAAsC;EAC/C,CAAC,CAAC,CACH;AACH;AAEAhB,cAAc,CAACM,IAAI,GAAG,oBAAoB","names":["HttpResponse","filter","map","RequestBuilder","listFood$Plain","http","rootUrl","params","context","rb","PATH","query","id","path","email","request","build","responseType","accept","pipe","r"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/api/fn/food/list-food-plain.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\nimport { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\nimport { FoodRm } from '../../models/food-rm';\n\nexport interface ListFood$Plain$Params {\n  id?: string;\n  email: string;\n}\n\nexport function listFood$Plain(http: HttpClient, rootUrl: string, params: ListFood$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<FoodRm>>> {\n  const rb = new RequestBuilder(rootUrl, listFood$Plain.PATH, 'get');\n  if (params) {\n    rb.query('id', params.id, {});\n    rb.path('email', params.email, {});\n  }\n\n  return http.request(\n    rb.build({ responseType: 'text', accept: 'text/plain', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),\n    map((r: HttpResponse<any>) => {\n      return r as StrictHttpResponse<Array<FoodRm>>;\n    })\n  );\n}\n\nlistFood$Plain.PATH = '/Food/list/{email}';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}