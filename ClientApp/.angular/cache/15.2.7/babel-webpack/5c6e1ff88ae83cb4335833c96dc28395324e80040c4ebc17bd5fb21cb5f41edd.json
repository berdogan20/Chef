{"ast":null,"code":"/* tslint:disable */\n/* eslint-disable */\nimport { HttpResponse } from '@angular/common/http';\nimport { filter, map } from 'rxjs/operators';\nimport { RequestBuilder } from '../../request-builder';\nexport function getAllCategoriesCategory(http, rootUrl, params, context) {\n  const rb = new RequestBuilder(rootUrl, getAllCategoriesCategory.PATH, 'get');\n  if (params) {}\n  return http.request(rb.build({\n    responseType: 'json',\n    accept: 'text/json',\n    context\n  })).pipe(filter(r => r instanceof HttpResponse), map(r => {\n    return r;\n  }));\n}\ngetAllCategoriesCategory.PATH = '/Category';","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAAkCA,YAAY,QAAQ,sBAAsB;AAE5E,SAASC,MAAM,EAAEC,GAAG,QAAQ,gBAAgB;AAE5C,SAASC,cAAc,QAAQ,uBAAuB;AAOtD,OAAM,SAAUC,wBAAwB,CAACC,IAAgB,EAAEC,OAAe,EAAEC,MAAwC,EAAEC,OAAqB;EACzI,MAAMC,EAAE,GAAG,IAAIN,cAAc,CAACG,OAAO,EAAEF,wBAAwB,CAACM,IAAI,EAAE,KAAK,CAAC;EAC5E,IAAIH,MAAM,EAAE;EAGZ,OAAOF,IAAI,CAACM,OAAO,CACjBF,EAAE,CAACG,KAAK,CAAC;IAAEC,YAAY,EAAE,MAAM;IAAEC,MAAM,EAAE,WAAW;IAAEN;EAAO,CAAE,CAAC,CACjE,CAACO,IAAI,CACJd,MAAM,CAAEe,CAAM,IAA6BA,CAAC,YAAYhB,YAAY,CAAC,EACrEE,GAAG,CAAEc,CAAoB,IAAI;IAC3B,OAAOA,CAA0C;EACnD,CAAC,CAAC,CACH;AACH;AAEAZ,wBAAwB,CAACM,IAAI,GAAG,WAAW","names":["HttpResponse","filter","map","RequestBuilder","getAllCategoriesCategory","http","rootUrl","params","context","rb","PATH","request","build","responseType","accept","pipe","r"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/api/fn/category/get-all-categories-category.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\nimport { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\nimport { CategoryRm } from '../../models/category-rm';\n\nexport interface GetAllCategoriesCategory$Params {\n}\n\nexport function getAllCategoriesCategory(http: HttpClient, rootUrl: string, params?: GetAllCategoriesCategory$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<CategoryRm>>> {\n  const rb = new RequestBuilder(rootUrl, getAllCategoriesCategory.PATH, 'get');\n  if (params) {\n  }\n\n  return http.request(\n    rb.build({ responseType: 'json', accept: 'text/json', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),\n    map((r: HttpResponse<any>) => {\n      return r as StrictHttpResponse<Array<CategoryRm>>;\n    })\n  );\n}\n\ngetAllCategoriesCategory.PATH = '/Category';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}