{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet MenuComponent = class MenuComponent {\n  constructor(foodService, authService, categoryService, router) {\n    this.foodService = foodService;\n    this.authService = authService;\n    this.categoryService = categoryService;\n    this.router = router;\n    this.searchResult = [];\n    this.categories = [];\n    this.category = \"All\";\n    this.isAddingCategory = false;\n    this.newCategoryName = '';\n  }\n  ngOnInit() {\n    this.search();\n    this.getCategories();\n  }\n  isUser() {\n    return this.authService.currentUser != null && this.authService.admin == false;\n  }\n  isAdmin() {\n    return this.authService.admin;\n  }\n  search() {\n    this.foodService.searchFood().subscribe(response => this.searchResult = response, this.handleError);\n  }\n  getCategories() {\n    this.categoryService.getAllCategoriesCategory().subscribe(rmList => this.categories = rmList, err => this.handleError(err));\n  }\n  handleError(err) {\n    console.log(err);\n  }\n  filterCategories(categoryId) {\n    if (categoryId == null) {\n      this.search();\n    } else {\n      this.foodService.getByCategoryIdFood({\n        categoryId: categoryId\n      }).subscribe(response => this.searchResult = response, err => console.log(err));\n    }\n  }\n  toggleAddCategoryMode() {\n    this.isAddingCategory = !this.isAddingCategory;\n    if (!this.isAddingCategory) {\n      // Clear the input field when exiting \"add mode\"\n      this.newCategoryName = '';\n    }\n  }\n  saveNewCategory() {\n    if (this.newCategoryName) {\n      const newCategoryId = this.categories.length + 1;\n      this.categoryService.createCategory({\n        body: {\n          id: newCategoryId,\n          name: this.newCategoryName\n        }\n      }).subscribe(_ => {\n        console.log(this.newCategoryName);\n      }, err => this.handleError(err));\n    }\n    this.newCategoryName = '';\n    this.toggleAddCategoryMode();\n    this.router.navigate(['/menu']);\n  }\n};\nMenuComponent = __decorate([Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})], MenuComponent);\nexport { MenuComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAWlC,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAUxBC,YAAoBC,WAAwB,EAClCC,WAAwB,EACxBC,eAAgC,EAChCC,MAAc;IAHJ,gBAAW,GAAXH,WAAW;IACrB,gBAAW,GAAXC,WAAW;IACX,oBAAe,GAAfC,eAAe;IACf,WAAM,GAANC,MAAM;IAXhB,iBAAY,GAAa,EAAE;IAC3B,eAAU,GAAiB,EAAE;IAC7B,aAAQ,GAAW,KAAK;IAGxB,qBAAgB,GAAY,KAAK;IACjC,oBAAe,GAAW,EAAE;EAKA;EAE5BC,QAAQ;IACN,IAAI,CAACC,MAAM,EAAE;IACb,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAC,MAAM;IACJ,OAAO,IAAI,CAACN,WAAW,CAACO,WAAW,IAAI,IAAI,IAAI,IAAI,CAACP,WAAW,CAACQ,KAAK,IAAI,KAAK;EAChF;EAEAC,OAAO;IACL,OAAO,IAAI,CAACT,WAAW,CAACQ,KAAK;EAC/B;EAGAJ,MAAM;IACJ,IAAI,CAACL,WAAW,CAACW,UAAU,EAAE,CAC1BC,SAAS,CAACC,QAAQ,IAAI,IAAI,CAACC,YAAY,GAAGD,QAAQ,EACjD,IAAI,CAACE,WAAW,CAAC;EACvB;EAEAT,aAAa;IACX,IAAI,CAACJ,eAAe,CAACc,wBAAwB,EAAE,CAC5CJ,SAAS,CAACK,MAAM,IAAI,IAAI,CAACC,UAAU,GAAGD,MAAM,EAC3CE,GAAG,IAAI,IAAI,CAACJ,WAAW,CAACI,GAAG,CAAC,CAAC;EACnC;EAEQJ,WAAW,CAACI,GAAQ;IAE1BC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAClB;EAEAG,gBAAgB,CAACC,UAAyB;IAExC,IAAIA,UAAU,IAAI,IAAI,EAAE;MACtB,IAAI,CAAClB,MAAM,EAAE;KACd,MACI;MACH,IAAI,CAACL,WAAW,CAACwB,mBAAmB,CAAC;QAAED,UAAU,EAAEA;MAAU,CAAE,CAAC,CAC7DX,SAAS,CAACC,QAAQ,IAAI,IAAI,CAACC,YAAY,GAAGD,QAAQ,EACjDM,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;;EAGhC;EAEAM,qBAAqB;IACnB,IAAI,CAACC,gBAAgB,GAAG,CAAC,IAAI,CAACA,gBAAgB;IAC9C,IAAI,CAAC,IAAI,CAACA,gBAAgB,EAAE;MAC1B;MACA,IAAI,CAACC,eAAe,GAAG,EAAE;;EAE7B;EAEAC,eAAe;IACb,IAAI,IAAI,CAACD,eAAe,EAAE;MAExB,MAAME,aAAa,GAAG,IAAI,CAACX,UAAU,CAACY,MAAM,GAAG,CAAC;MAEhD,IAAI,CAAC5B,eAAe,CAAC6B,cAAc,CAAC;QAClCC,IAAI,EAAE;UACJC,EAAE,EAAEJ,aAAa;UACjBK,IAAI,EAAE,IAAI,CAACP;;OAEd,CAAC,CACCf,SAAS,CAACuB,CAAC,IAAG;QACbf,OAAO,CAACC,GAAG,CAAC,IAAI,CAACM,eAAe,CAAC;MACnC,CAAC,EAAER,GAAG,IAAI,IAAI,CAACJ,WAAW,CAACI,GAAG,CAAC,CAAC;;IAGpC,IAAI,CAACQ,eAAe,GAAG,EAAE;IACzB,IAAI,CAACF,qBAAqB,EAAE;IAC5B,IAAI,CAACtB,MAAM,CAACiC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACjC;CAID;AA1FYtC,aAAa,eALzBD,SAAS,CAAC;EACTwC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,GACWzC,aAAa,CA0FzB;SA1FYA,aAAa","names":["Component","MenuComponent","constructor","foodService","authService","categoryService","router","ngOnInit","search","getCategories","isUser","currentUser","admin","isAdmin","searchFood","subscribe","response","searchResult","handleError","getAllCategoriesCategory","rmList","categories","err","console","log","filterCategories","categoryId","getByCategoryIdFood","toggleAddCategoryMode","isAddingCategory","newCategoryName","saveNewCategory","newCategoryId","length","createCategory","body","id","name","_","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/menu/menu.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FoodService } from './../api/services/food.service';\nimport { CategoryRm, FoodRm } from '../api/models';\nimport { AuthService } from '../auth/auth.service';\nimport { CategoryService } from '../api/services';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent {\n\n  searchResult: FoodRm[] = [];\n  categories: CategoryRm[] = [];\n  category: string = \"All\";\n\n\n  isAddingCategory: boolean = false;\n  newCategoryName: string = '';\n\n  constructor(private foodService: FoodService,\n    private authService: AuthService,\n    private categoryService: CategoryService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.search();\n    this.getCategories();\n  }\n\n  isUser() {\n    return this.authService.currentUser != null && this.authService.admin == false;\n  }\n\n  isAdmin() {\n    return this.authService.admin;\n  }\n\n\n  search() {\n    this.foodService.searchFood()\n      .subscribe(response => this.searchResult = response,\n        this.handleError)\n  }\n\n  getCategories() {\n    this.categoryService.getAllCategoriesCategory()\n      .subscribe(rmList => this.categories = rmList,\n        err => this.handleError(err));\n  }\n\n  private handleError(err: any) {\n\n    console.log(err);\n  }\n\n  filterCategories(categoryId: number | null) {\n\n    if (categoryId == null) {\n      this.search();\n    }\n    else {\n      this.foodService.getByCategoryIdFood({ categoryId: categoryId })\n        .subscribe(response => this.searchResult = response,\n          err => console.log(err));\n    }\n\n  }\n\n  toggleAddCategoryMode() {\n    this.isAddingCategory = !this.isAddingCategory;\n    if (!this.isAddingCategory) {\n      // Clear the input field when exiting \"add mode\"\n      this.newCategoryName = '';\n    }\n  }\n\n  saveNewCategory() {\n    if (this.newCategoryName) {\n\n      const newCategoryId = this.categories.length + 1;\n\n      this.categoryService.createCategory({\n        body: {\n          id: newCategoryId,\n          name: this.newCategoryName\n        }\n      })\n        .subscribe(_ => {\n          console.log(this.newCategoryName);\n        }, err => this.handleError(err));\n    }\n\n    this.newCategoryName = '';\n    this.toggleAddCategoryMode();\n    this.router.navigate(['/menu'])\n  }\n\n\n   \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}