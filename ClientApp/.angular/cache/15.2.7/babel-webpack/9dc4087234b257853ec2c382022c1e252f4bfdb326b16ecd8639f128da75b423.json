{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet MyOrdersComponent = class MyOrdersComponent {\n  constructor(orderService, foodService, authService) {\n    this.orderService = orderService;\n    this.foodService = foodService;\n    this.authService = authService;\n    this.orders = [];\n  }\n  ngOnInit() {\n    console.log(this.authService.currentUser?.email);\n    this.orderService.listOrder({\n      email: this.authService.currentUser?.email ?? ''\n    }).subscribe(r => this.orders = r, this.handleError);\n  }\n  handleError(err) {\n    console.log(\"Response Error, Status:\", err.status);\n    console.log(\"Response Error, Status Text:\", err.statusText);\n    console.log(err);\n  }\n  getFood(foodId) {\n    if (!foodId) {\n      // Handle the case where foodId is undefined, e.g., return a default value or handle the error\n      return undefined;\n    }\n    let food;\n    this.foodService.findFood({\n      id: foodId\n    }).subscribe(f => food = f, err => this.handleError(err));\n    return food;\n  }\n};\nMyOrdersComponent = __decorate([Component({\n  selector: 'app-my-orders',\n  templateUrl: './my-orders.component.html',\n  styleUrls: ['./my-orders.component.css']\n})], MyOrdersComponent);\nexport { MyOrdersComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAW1C,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAI5BC,YAAoBC,YAA0B,EACpCC,WAAwB,EACxBC,WAAwB;IAFd,iBAAY,GAAZF,YAAY;IACtB,gBAAW,GAAXC,WAAW;IACX,gBAAW,GAAXC,WAAW;IAJrB,WAAM,GAAc,EAAE;EAIgB;EAEtCC,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,WAAW,CAACI,WAAW,EAAEC,KAAK,CAAC;IAChD,IAAI,CAACP,YAAY,CAACQ,SAAS,CAAC;MAAED,KAAK,EAAE,IAAI,CAACL,WAAW,CAACI,WAAW,EAAEC,KAAK,IAAI;IAAE,CAAE,CAAC,CAC9EE,SAAS,CAACC,CAAC,IAAI,IAAI,CAACC,MAAM,GAAGD,CAAC,EAAE,IAAI,CAACE,WAAW,CAAC;EAEtD;EAEQA,WAAW,CAACC,GAAQ;IAC1BT,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEQ,GAAG,CAACC,MAAM,CAAC;IAClDV,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEQ,GAAG,CAACE,UAAU,CAAC;IAC3DX,OAAO,CAACC,GAAG,CAACQ,GAAG,CAAC;EAClB;EAEAG,OAAO,CAACC,MAA0B;IAChC,IAAI,CAACA,MAAM,EAAE;MACX;MACA,OAAOC,SAAS;;IAGlB,IAAIC,IAAY;IAEhB,IAAI,CAAClB,WAAW,CAACmB,QAAQ,CAAC;MAAEC,EAAE,EAAEJ;IAAM,CAAE,CAAC,CACtCR,SAAS,CAACa,CAAC,IAAIH,IAAI,GAAGG,CAAC,EACtBT,GAAG,IAAI,IAAI,CAACD,WAAW,CAACC,GAAG,CAAC,CAAC;IAEjC,OAAOM,IAAK;EACd;CAID;AAtCYrB,iBAAiB,eAL7BD,SAAS,CAAC;EACT0B,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACW3B,iBAAiB,CAsC7B;SAtCYA,iBAAiB","names":["Component","MyOrdersComponent","constructor","orderService","foodService","authService","ngOnInit","console","log","currentUser","email","listOrder","subscribe","r","orders","handleError","err","status","statusText","getFood","foodId","undefined","food","findFood","id","f","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/my-orders/my-orders.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { OrderRm, FoodRm} from '../api/models';\nimport { FoodService } from '../api/services';\nimport { OrderService } from './../api/services/order.service';\nimport { AuthService } from './../auth/auth.service';\n\n@Component({\n  selector: 'app-my-orders',\n  templateUrl: './my-orders.component.html',\n  styleUrls: ['./my-orders.component.css']\n})\nexport class MyOrdersComponent {\n\n  orders: OrderRm[] = [];\n\n  constructor(private orderService: OrderService,\n    private foodService: FoodService,\n    private authService: AuthService) { }\n\n  ngOnInit(): void {\n    console.log(this.authService.currentUser?.email);\n    this.orderService.listOrder({ email: this.authService.currentUser?.email ?? '' })\n      .subscribe(r => this.orders = r, this.handleError);\n    \n  }\n\n  private handleError(err: any) {\n    console.log(\"Response Error, Status:\", err.status);\n    console.log(\"Response Error, Status Text:\", err.statusText);\n    console.log(err);\n  }\n\n  getFood(foodId: string | undefined): FoodRm | undefined {\n    if (!foodId) {\n      // Handle the case where foodId is undefined, e.g., return a default value or handle the error\n      return undefined;\n    }\n\n    let food: FoodRm;\n\n    this.foodService.findFood({ id: foodId })\n      .subscribe(f => food = f,\n        err => this.handleError(err));\n\n    return food!;\n  }\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}