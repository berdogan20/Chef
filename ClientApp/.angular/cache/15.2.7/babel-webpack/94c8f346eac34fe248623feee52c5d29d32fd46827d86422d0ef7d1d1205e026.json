{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet CreateFoodComponent = class CreateFoodComponent {\n  constructor(route, router, authService, foodService, orderService, formBuilder) {\n    this.route = route;\n    this.router = router;\n    this.authService = authService;\n    this.foodService = foodService;\n    this.orderService = orderService;\n    this.formBuilder = formBuilder;\n    this.foodId = 'not loaded';\n    this.food = {};\n    this.findFood = foodId => {\n      this.foodId = foodId ?? 'not passed';\n      this.foodService.findFood({\n        id: this.foodId\n      }).subscribe(food => this.food = food, err => this.handleError(err));\n      console.log(this.foodId);\n    };\n    this.handleError = err => {\n      if (err.status == 404) {\n        alert(\"Food not found!\");\n        this.router.navigate(['/menu']);\n      }\n      if (err.status == 409) {\n        console.log(\"err: \" + err);\n        alert(JSON.parse(err.error).message);\n      }\n      console.log(\"Response Error. Status: \", err.status);\n      console.log(\"Response Error. Status Text: \", err.statusText);\n      console.log(err);\n    };\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      imageUrl: [this.food.imageUrl, Validators.required],\n      name: [this.food.name, Validators.required],\n      description: [this.food.description, Validators.required],\n      price: [this.food.price, Validators.required],\n      preperationTime: [this.food.preperationTime]\n    });\n    this.route.paramMap.subscribe(p => this.findFood(p.get(\"foodId\")));\n  }\n  saveChanges() {\n    console.log(this.form);\n    let dto = {\n      description: this.form.value.description,\n      id: this.foodId,\n      imageUrl: this.food.imageUrl,\n      name: this.form.value.name,\n      preperationTime: Number(this.form.value.preperationTime),\n      price: Number(this.form.value.price)\n    };\n    this.foodService.editFood({\n      id: this.foodId,\n      body: dto\n    }).subscribe(_ => {}, err => this.handleError(err));\n    this.router.navigate(['/menu']);\n  }\n  deleteFood() {\n    this.foodService.deleteFood({\n      id: this.foodId\n    }).subscribe(_ => {}, err => this.handleError(err));\n    this.router.navigate(['/menu']);\n  }\n};\nCreateFoodComponent = __decorate([Component({\n  selector: 'app-create-food',\n  templateUrl: './create-food.component.html',\n  styleUrls: ['./create-food.component.css']\n})], CreateFoodComponent);\nexport { CreateFoodComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","CreateFoodComponent","constructor","route","router","authService","foodService","orderService","formBuilder","foodId","findFood","id","subscribe","food","err","handleError","console","log","status","alert","navigate","JSON","parse","error","message","statusText","ngOnInit","form","group","imageUrl","required","name","description","price","preperationTime","paramMap","p","get","saveChanges","dto","value","Number","editFood","body","_","deleteFood","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/create-food/create-food.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-create-food',\n  templateUrl: './create-food.component.html',\n  styleUrls: ['./create-food.component.css']\n})\nexport class CreateFoodComponent {\n\n  foodId: string = 'not loaded';\n  food: FoodRm = {};\n\n  form!: FormGroup;\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService,\n    private foodService: FoodService,\n    private orderService: OrderService,\n    private formBuilder: FormBuilder,) { }\n\n\n  ngOnInit(): void {\n\n    this.form = this.formBuilder.group({\n      imageUrl: [this.food.imageUrl, Validators.required],\n      name: [this.food.name, Validators.required],\n      description: [this.food.description, Validators.required],\n      price: [this.food.price, Validators.required],\n      preperationTime: [this.food.preperationTime]\n    });\n\n    this.route.paramMap\n      .subscribe(p => this.findFood(p.get(\"foodId\")))\n  }\n\n  saveChanges() {\n    console.log(this.form);\n\n    let dto = {\n      description: this.form.value.description,\n      id: this.foodId,\n      imageUrl: this.food.imageUrl,\n      name: this.form.value.name,\n      preperationTime: Number(this.form.value.preperationTime),\n      price: Number(this.form.value.price)\n    }\n\n    this.foodService.editFood({ id: this.foodId, body: dto })\n      .subscribe(\n        (_) => { },\n        (err) => this.handleError(err)\n      );\n\n    this.router.navigate(['/menu']);\n  }\n\n  deleteFood() {\n    this.foodService.deleteFood({ id: this.foodId })\n      .subscribe(_ => { },\n        err => this.handleError(err));\n    this.router.navigate(['/menu']);\n  }\n\n  private findFood = (foodId: string | null) => {\n    this.foodId = foodId ?? 'not passed';\n\n    this.foodService.findFood({ id: this.foodId })\n      .subscribe(\n        food => this.food = food,\n        err => this.handleError(err)\n      );\n\n    console.log(this.foodId)\n  }\n\n  private handleError = (err: any) => {\n\n    if (err.status == 404) {\n      alert(\"Food not found!\")\n      this.router.navigate(['/menu'])\n    }\n\n\n    if (err.status == 409) {\n      console.log(\"err: \" + err);\n      alert(JSON.parse(err.error).message)\n    }\n\n    console.log(\"Response Error. Status: \", err.status)\n    console.log(\"Response Error. Status Text: \", err.statusText)\n    console.log(err)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}