{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../auth/auth.service\";\nimport * as i3 from \"../api/services\";\nimport * as i4 from \"@angular/forms\";\nexport class EditFoodComponent {\n  constructor(route, router, authService, foodService, orderService, fb) {\n    this.route = route;\n    this.router = router;\n    this.authService = authService;\n    this.foodService = foodService;\n    this.orderService = orderService;\n    this.fb = fb;\n    this.foodId = 'not loaded';\n    this.food = {};\n    this.form = this.fb.group({\n      number: [1, Validators.compose([Validators.required, Validators.min(1), Validators.max(10)])]\n    });\n    this.findFood = foodId => {\n      this.foodId = foodId ?? 'not passed';\n      this.foodService.findFood({\n        id: this.foodId\n      }).subscribe(food => this.food = food, err => this.handleError(err));\n      console.log(this.foodId);\n    };\n    this.handleError = err => {\n      if (err.status == 404) {\n        alert(\"Food not found!\");\n        this.router.navigate(['/menu']);\n      }\n      if (err.status == 409) {\n        console.log(\"err: \" + err);\n        alert(JSON.parse(err.error).message);\n      }\n      console.log(\"Response Error. Status: \", err.status);\n      console.log(\"Response Error. Status Text: \", err.statusText);\n      console.log(err);\n    };\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(p => this.findFood(p.get(\"foodId\")));\n  }\n  buy() {\n    if (this.form.invalid) return;\n    // I will use Dto\n    // because it will be a post operation\n    const order = {\n      address: this.authService.currentUser?.address,\n      amount: this.form.get('number')?.value,\n      foodId: this.food.id,\n      orderId: Date.now().toString(),\n      orderOwner: this.authService.currentUser?.email,\n      status: \"Your order has been received.\"\n    };\n    console.log(order);\n    this.orderService.buyOrder({\n      body: order\n    }).subscribe(_ => this.router.navigate(['/my-orders']), err => this.handleError(err));\n  }\n  get number() {\n    return this.form.controls.number;\n  }\n}\nEditFoodComponent.ɵfac = function EditFoodComponent_Factory(t) {\n  return new (t || EditFoodComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.FoodService), i0.ɵɵdirectiveInject(i3.OrderService), i0.ɵɵdirectiveInject(i4.FormBuilder));\n};\nEditFoodComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditFoodComponent,\n  selectors: [[\"app-edit-food\"]],\n  decls: 32,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"card\", \"mb-3\", 2, \"max-width\", \"100%\"], [1, \"row\", \"g-0\"], [1, \"col-md-4\"], [1, \"img-fluid\", \"rounded-start\", 3, \"src\", \"alt\"], [1, \"col-md-8\"], [1, \"card-body\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"name\", \"id\", \"name\", \"placeholder\", \"food.name\", 1, \"form-control\"], [\"for\", \"description\"], [\"type\", \"description\", \"id\", \"description\", \"placeholder\", \"food.description\", 1, \"form-control\"], [1, \"form-row\"], [1, \"col\"], [\"for\", \"price\"], [\"formControlName\", \"price\", \"type\", \"number\", \"id\", \"price\", \"name\", \"price\", \"placeholder\", \"food.price\", 1, \"form-control\", 2, \"max-width\", \"30%\"], [\"for\", \"preperationTime\"], [\"formControlName\", \"preperationTime\", \"type\", \"number\", \"id\", \"preperationTime\", \"name\", \"preperationTime\", \"placeholder\", \"food.preperationTime\", 1, \"form-control\", 2, \"max-width\", \"30%\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function EditFoodComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\")(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3);\n      i0.ɵɵelement(5, \"img\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"div\", 7)(9, \"label\", 8);\n      i0.ɵɵtext(10, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 6)(13, \"div\", 7)(14, \"label\", 10);\n      i0.ɵɵtext(15, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 12)(18, \"div\", 13)(19, \"label\", 14);\n      i0.ɵɵtext(20, \"Price\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 13)(23, \"label\", 16);\n      i0.ɵɵtext(24, \"Preperation Time\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 17);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 6);\n      i0.ɵɵelement(27, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 6);\n      i0.ɵɵelement(29, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"button\", 18);\n      i0.ɵɵtext(31, \"Submit\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"src\", ctx.food.imageUrl, i0.ɵɵsanitizeUrl)(\"alt\", ctx.food.name);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormControlName, i4.NgForm],\n  styles: [\"button[_ngcontent-%COMP%] {\\n  background-color: #b1b2ff;\\n  color: white;\\n}\\n\\n  button[_ngcontent-%COMP%]:hover {\\n    color: #b1b2ff;\\n    background-color: white;\\n    border: 1px solid #b1b2ff;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZWRpdC1mb29kL2VkaXQtZm9vZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7QUFDZDs7RUFFRTtJQUNFLGNBQWM7SUFDZCx1QkFBdUI7SUFDdkIseUJBQXlCO0VBQzNCIiwic291cmNlc0NvbnRlbnQiOlsiYnV0dG9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2IxYjJmZjtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4gIGJ1dHRvbjpob3ZlciB7XG4gICAgY29sb3I6ICNiMWIyZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2IxYjJmZjtcbiAgfVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","EditFoodComponent","constructor","route","router","authService","foodService","orderService","fb","group","number","compose","required","min","max","foodId","findFood","id","subscribe","food","err","handleError","console","log","status","alert","navigate","JSON","parse","error","message","statusText","ngOnInit","paramMap","p","get","buy","form","invalid","order","address","currentUser","amount","value","orderId","Date","now","toString","orderOwner","email","buyOrder","body","_","controls","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/edit-food/edit-food.component.ts","/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/edit-food/edit-food.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FoodService, OrderService } from '../api/services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FoodRm, OrderDto } from '../api/models';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../auth/auth.service';\n\n\n@Component({\n  selector: 'app-edit-food',\n  templateUrl: './edit-food.component.html',\n  styleUrls: ['./edit-food.component.css']\n})\nexport class EditFoodComponent {\n\n  foodId: string = 'not loaded';\n  food: FoodRm = {};\n\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService,\n    private foodService: FoodService,\n    private orderService: OrderService,\n    private fb: FormBuilder) { }\n\n\n  form = this.fb.group({\n    number: [1, Validators.compose([Validators.required, Validators.min(1), Validators.max(10)])]\n  })\n\n  ngOnInit(): void {\n    this.route.paramMap\n      .subscribe(p => this.findFood(p.get(\"foodId\")))\n  }\n\n  private findFood = (foodId: string | null) => {\n    this.foodId = foodId ?? 'not passed';\n\n    this.foodService.findFood({ id: this.foodId })\n      .subscribe(\n        food => this.food = food,\n        err => this.handleError(err)\n      );\n\n    console.log(this.foodId)\n  }\n\n  private handleError = (err: any) => {\n\n    if (err.status == 404) {\n      alert(\"Food not found!\")\n      this.router.navigate(['/menu'])\n    }\n\n\n    if (err.status == 409) {\n      console.log(\"err: \" + err);\n      alert(JSON.parse(err.error).message)\n    }\n\n    console.log(\"Response Error. Status: \", err.status)\n    console.log(\"Response Error. Status Text: \", err.statusText)\n    console.log(err)\n  }\n\n  buy() {\n\n    if (this.form.invalid)\n      return;\n\n    // I will use Dto\n    // because it will be a post operation\n\n    const order: OrderDto = {\n      address: this.authService.currentUser?.address!,\n      amount: this.form.get('number')?.value!,\n      foodId: this.food.id,\n      orderId: Date.now().toString(), // Using current timestamp as orderId\n      orderOwner: this.authService.currentUser?.email!,\n      status: \"Your order has been received.\"\n    }\n\n    console.log(order);\n\n    this.orderService.buyOrder({ body: order })\n      .subscribe(\n        _ => this.router.navigate(['/my-orders']),\n        err => this.handleError(err)\n      );\n\n\n  }\n\n  get number() {\n    return this.form.controls.number\n  }\n}\n","<div class=\"container\">\n    <form>\n        <div class=\"card mb-3\" style=\"max-width: 100%;\">\n            <div class=\"row g-0\">\n                <div class=\"col-md-4\">\n                    <img [src]=\"food.imageUrl\" class=\"img-fluid rounded-start\" [alt]=\"food.name\">\n                </div>\n\n                <div class=\"col-md-8\">\n                    <!--name-->\n                    <div class=\"card-body\">\n                        <div class=\"form-group\">\n                            <label for=\"name\">Name</label>\n                            <input type=\"name\" class=\"form-control\" id=\"name\" placeholder=\"food.name\">\n                        </div>\n                    </div>\n                    <!--description-->\n                    <div class=\"card-body\">\n                        <div class=\"form-group\">\n                            <label for=\"description\">Description</label>\n                            <input type=\"description\" class=\"form-control\" id=\"description\" placeholder=\"food.description\">\n                        </div>\n                    </div>\n                    <!--price-->\n\n                    <div class=\"form-row\">\n                        <div class=\"col\">\n                            <label for=\"price\">Price</label>\n                            <input formControlName=\"price\"\n                                   type=\"number\" class=\"form-control\"\n                                   id=\"price\" name=\"price\"\n                                   style=\"max-width: 30%;\"\n                                   placeholder=\"food.price\" />\n                        </div>\n                        <div class=\"col\">\n                            <label for=\"preperationTime\">Preperation Time</label>\n                            <input formControlName=\"preperationTime\"\n                                   type=\"number\" class=\"form-control\"\n                                   id=\"preperationTime\" name=\"preperationTime\"\n                                   style=\"max-width: 30%;\"\n                                   placeholder=\"food.preperationTime\" />\n                        </div>\n                    </div>\n\n                    <div class=\"card-body\">\n                        <div class=\"form-group\">\n                            \n                        </div>\n                    </div>\n                    <!--preperationTime-->\n                    <div class=\"card-body\">\n                        <div class=\"form-group\">\n                            \n                        </div>\n                    </div>\n                    <!--submit button-->\n                    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}