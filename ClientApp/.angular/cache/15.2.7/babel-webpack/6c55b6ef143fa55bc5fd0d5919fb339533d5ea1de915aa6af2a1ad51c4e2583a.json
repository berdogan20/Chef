{"ast":null,"code":"/* tslint:disable */\n/* eslint-disable */\nimport { HttpResponse } from '@angular/common/http';\nimport { filter, map } from 'rxjs/operators';\nimport { RequestBuilder } from '../../request-builder';\nexport function createOrderItemOrder$Plain(http, rootUrl, params, context) {\n  const rb = new RequestBuilder(rootUrl, createOrderItemOrder$Plain.PATH, 'post');\n  if (params) {\n    rb.body(params.body, 'application/*+json');\n  }\n  return http.request(rb.build({\n    responseType: 'text',\n    accept: 'text/plain',\n    context\n  })).pipe(filter(r => r instanceof HttpResponse), map(r => {\n    return r;\n  }));\n}\ncreateOrderItemOrder$Plain.PATH = '/Order/items';","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAAkCA,YAAY,QAAQ,sBAAsB;AAE5E,SAASC,MAAM,EAAEC,GAAG,QAAQ,gBAAgB;AAE5C,SAASC,cAAc,QAAQ,uBAAuB;AAQtD,OAAM,SAAUC,0BAA0B,CAACC,IAAgB,EAAEC,OAAe,EAAEC,MAA0C,EAAEC,OAAqB;EAC7I,MAAMC,EAAE,GAAG,IAAIN,cAAc,CAACG,OAAO,EAAEF,0BAA0B,CAACM,IAAI,EAAE,MAAM,CAAC;EAC/E,IAAIH,MAAM,EAAE;IACVE,EAAE,CAACE,IAAI,CAACJ,MAAM,CAACI,IAAI,EAAE,oBAAoB,CAAC;;EAG5C,OAAON,IAAI,CAACO,OAAO,CACjBH,EAAE,CAACI,KAAK,CAAC;IAAEC,YAAY,EAAE,MAAM;IAAEC,MAAM,EAAE,YAAY;IAAEP;EAAO,CAAE,CAAC,CAClE,CAACQ,IAAI,CACJf,MAAM,CAAEgB,CAAM,IAA6BA,CAAC,YAAYjB,YAAY,CAAC,EACrEE,GAAG,CAAEe,CAAoB,IAAI;IAC3B,OAAOA,CAAqC;EAC9C,CAAC,CAAC,CACH;AACH;AAEAb,0BAA0B,CAACM,IAAI,GAAG,cAAc","names":["HttpResponse","filter","map","RequestBuilder","createOrderItemOrder$Plain","http","rootUrl","params","context","rb","PATH","body","request","build","responseType","accept","pipe","r"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/api/fn/order/create-order-item-order-plain.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\nimport { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\nimport { OrderItemDto } from '../../models/order-item-dto';\n\nexport interface CreateOrderItemOrder$Plain$Params {\n      body?: OrderItemDto\n}\n\nexport function createOrderItemOrder$Plain(http: HttpClient, rootUrl: string, params?: CreateOrderItemOrder$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<OrderItemDto>> {\n  const rb = new RequestBuilder(rootUrl, createOrderItemOrder$Plain.PATH, 'post');\n  if (params) {\n    rb.body(params.body, 'application/*+json');\n  }\n\n  return http.request(\n    rb.build({ responseType: 'text', accept: 'text/plain', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),\n    map((r: HttpResponse<any>) => {\n      return r as StrictHttpResponse<OrderItemDto>;\n    })\n  );\n}\n\ncreateOrderItemOrder$Plain.PATH = '/Order/items';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}