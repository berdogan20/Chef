{"ast":null,"code":"/* tslint:disable */\n/* eslint-disable */\nimport { HttpResponse } from '@angular/common/http';\nimport { filter, map } from 'rxjs/operators';\nimport { RequestBuilder } from '../../request-builder';\nexport function buyOrder(http, rootUrl, params, context) {\n  const rb = new RequestBuilder(rootUrl, buyOrder.PATH, 'post');\n  if (params) {\n    rb.query('OrderId', params.OrderId, {});\n    rb.query('FoodId', params.FoodId, {});\n    rb.query('OrderOwner', params.OrderOwner, {});\n    rb.query('Amount', params.Amount, {});\n    rb.query('Address', params.Address, {});\n    rb.query('Status', params.Status, {});\n  }\n  return http.request(rb.build({\n    responseType: 'text',\n    accept: '*/*',\n    context\n  })).pipe(filter(r => r instanceof HttpResponse), map(r => {\n    return r.clone({\n      body: undefined\n    });\n  }));\n}\nbuyOrder.PATH = '/Order';","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAAkCA,YAAY,QAAQ,sBAAsB;AAE5E,SAASC,MAAM,EAAEC,GAAG,QAAQ,gBAAgB;AAE5C,SAASC,cAAc,QAAQ,uBAAuB;AAYtD,OAAM,SAAUC,QAAQ,CAACC,IAAgB,EAAEC,OAAe,EAAEC,MAAwB,EAAEC,OAAqB;EACzG,MAAMC,EAAE,GAAG,IAAIN,cAAc,CAACG,OAAO,EAAEF,QAAQ,CAACM,IAAI,EAAE,MAAM,CAAC;EAC7D,IAAIH,MAAM,EAAE;IACVE,EAAE,CAACE,KAAK,CAAC,SAAS,EAAEJ,MAAM,CAACK,OAAO,EAAE,EAAE,CAAC;IACvCH,EAAE,CAACE,KAAK,CAAC,QAAQ,EAAEJ,MAAM,CAACM,MAAM,EAAE,EAAE,CAAC;IACrCJ,EAAE,CAACE,KAAK,CAAC,YAAY,EAAEJ,MAAM,CAACO,UAAU,EAAE,EAAE,CAAC;IAC7CL,EAAE,CAACE,KAAK,CAAC,QAAQ,EAAEJ,MAAM,CAACQ,MAAM,EAAE,EAAE,CAAC;IACrCN,EAAE,CAACE,KAAK,CAAC,SAAS,EAAEJ,MAAM,CAACS,OAAO,EAAE,EAAE,CAAC;IACvCP,EAAE,CAACE,KAAK,CAAC,QAAQ,EAAEJ,MAAM,CAACU,MAAM,EAAE,EAAE,CAAC;;EAGvC,OAAOZ,IAAI,CAACa,OAAO,CACjBT,EAAE,CAACU,KAAK,CAAC;IAAEC,YAAY,EAAE,MAAM;IAAEC,MAAM,EAAE,KAAK;IAAEb;EAAO,CAAE,CAAC,CAC3D,CAACc,IAAI,CACJrB,MAAM,CAAEsB,CAAM,IAA6BA,CAAC,YAAYvB,YAAY,CAAC,EACrEE,GAAG,CAAEqB,CAAoB,IAAI;IAC3B,OAAQA,CAAuB,CAACC,KAAK,CAAC;MAAEC,IAAI,EAAEC;IAAS,CAAE,CAA6B;EACxF,CAAC,CAAC,CACH;AACH;AAEAtB,QAAQ,CAACM,IAAI,GAAG,QAAQ","names":["HttpResponse","filter","map","RequestBuilder","buyOrder","http","rootUrl","params","context","rb","PATH","query","OrderId","FoodId","OrderOwner","Amount","Address","Status","request","build","responseType","accept","pipe","r","clone","body","undefined"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/api/fn/order/buy-order.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\nimport { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\n\nexport interface BuyOrder$Params {\n  OrderId?: string;\n  FoodId?: string;\n  OrderOwner?: string;\n  Amount?: number;\n  Address?: string;\n  Status?: string;\n}\n\nexport function buyOrder(http: HttpClient, rootUrl: string, params?: BuyOrder$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {\n  const rb = new RequestBuilder(rootUrl, buyOrder.PATH, 'post');\n  if (params) {\n    rb.query('OrderId', params.OrderId, {});\n    rb.query('FoodId', params.FoodId, {});\n    rb.query('OrderOwner', params.OrderOwner, {});\n    rb.query('Amount', params.Amount, {});\n    rb.query('Address', params.Address, {});\n    rb.query('Status', params.Status, {});\n  }\n\n  return http.request(\n    rb.build({ responseType: 'text', accept: '*/*', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),\n    map((r: HttpResponse<any>) => {\n      return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n    })\n  );\n}\n\nbuyOrder.PATH = '/Order';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}