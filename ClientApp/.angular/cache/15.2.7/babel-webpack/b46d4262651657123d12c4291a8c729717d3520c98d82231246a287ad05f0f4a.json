{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./../auth/auth.service\";\nimport * as i3 from \"../api/services\";\nimport * as i4 from \"@angular/common\";\nfunction OrderDetailComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3);\n    i0.ɵɵelement(2, \"div\", 4);\n    i0.ɵɵelementStart(3, \"div\", 5);\n    i0.ɵɵelement(4, \"div\", 6);\n    i0.ɵɵelementEnd()()();\n  }\n}\nexport class OrderDetailComponent {\n  constructor(router, authService, foodService, orderService, userService) {\n    this.router = router;\n    this.authService = authService;\n    this.foodService = foodService;\n    this.orderService = orderService;\n    this.userService = userService;\n    this.orderId = 'not loaded';\n    this.order = {};\n    this.orderItems = [];\n    this.foods = [];\n    this.findOrder = orderId => {\n      //this.orderId = orderId ?? 'not passed';\n      //this.orderService.findOrder({})\n      //  .subscribe(\n      //    food => {\n      //      this.food = food\n      //      this.getCategory(this.food.categoryId!);\n      //    },\n      //    err => this.handleError(err)\n      //  );\n    };\n    this.handleError = err => {\n      if (err.status == 404) {\n        alert(\"Food not found!\");\n        this.router.navigate(['/menu']);\n      }\n      if (err.status == 409) {\n        console.log(\"err: \" + err);\n        alert(JSON.parse(err.error).message);\n      }\n      console.log(\"Response Error. Status: \", err.status);\n      console.log(\"Response Error. Status Text: \", err.statusText);\n      console.log(err);\n    };\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(p => this.findOrder(p.get(\"orderId\")));\n    //this.orderService.getOrderItemsOrder({ orderId:  })\n    //g({ email: this.authService.currentUser?.email! })\n    //.subscribe(\n    //  (basket) => {\n    //    this.basket = basket;\n    //    console.log(this.basket);\n    //    // Fetch food data for each order\n    //    const foodObservables = basket.map((orderItem) =>\n    //      this.foodService.findFood({ id: orderItem.foodItemId! })\n    //    );\n    //    forkJoin(foodObservables).subscribe(\n    //      (foods) => {\n    //        // All food requests have completed here\n    //        this.foods = foods;\n    //      },\n    //      (err) => this.handleError(err)\n    //    );\n    //  },\n    //  (err) => this.handleError(err)\n    //);\n  }\n}\n\nOrderDetailComponent.ɵfac = function OrderDetailComponent_Factory(t) {\n  return new (t || OrderDetailComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.FoodService), i0.ɵɵdirectiveInject(i3.OrderService), i0.ɵɵdirectiveInject(i3.UserService));\n};\nOrderDetailComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OrderDetailComponent,\n  selectors: [[\"app-order-detail\"]],\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"container\"], [\"class\", \"card mb-3\", \"style\", \"max-width: 100%;\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\", \"mb-3\", 2, \"max-width\", \"100%\"], [1, \"row\", \"g-0\"], [1, \"col-md-4\"], [1, \"col-md-8\"], [1, \"card-body\"]],\n  template: function OrderDetailComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, OrderDetailComponent_div_1_Template, 5, 0, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.orderItems);\n    }\n  },\n  dependencies: [i4.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAEIA,8BAAqF;IAG7EA,yBAEM;IAENA,8BAAsB;IAClBA,yBAMM;IACVA,iBAAM;;;ACJlB,OAAM,MAAOC,oBAAoB;EAO/BC,YACUC,MAAc,EACdC,WAAwB,EACxBC,WAAwB,EACxBC,YAA0B,EAC1BC,WAAwB;IAJxB,WAAM,GAANJ,MAAM;IACN,gBAAW,GAAXC,WAAW;IACX,gBAAW,GAAXC,WAAW;IACX,iBAAY,GAAZC,YAAY;IACZ,gBAAW,GAAXC,WAAW;IAVrB,YAAO,GAAW,YAAY;IAC9B,UAAK,GAAY,EAAE;IACnB,eAAU,GAAgB,EAAE;IAC5B,UAAK,GAAa,EAAE;IAyCZ,cAAS,GAAIC,OAAsB,IAAI;MAC7C;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA,CACD;IAGO,gBAAW,GAAIC,GAAQ,IAAI;MAEjC,IAAIA,GAAG,CAACC,MAAM,IAAI,GAAG,EAAE;QACrBC,KAAK,CAAC,iBAAiB,CAAC;QACxB,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;MAIjC,IAAIH,GAAG,CAACC,MAAM,IAAI,GAAG,EAAE;QACrBG,OAAO,CAACC,GAAG,CAAC,OAAO,GAAGL,GAAG,CAAC;QAC1BE,KAAK,CAACI,IAAI,CAACC,KAAK,CAACP,GAAG,CAACQ,KAAK,CAAC,CAACC,OAAO,CAAC;;MAGtCL,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEL,GAAG,CAACC,MAAM,CAAC;MACnDG,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEL,GAAG,CAACU,UAAU,CAAC;MAC5DN,OAAO,CAACC,GAAG,CAACL,GAAG,CAAC;IAClB,CAAC;EAhEqC;EAGtCW,QAAQ;IAEN,IAAI,CAACC,KAAK,CAACC,QAAQ,CAChBC,SAAS,CAACC,CAAC,IAAI,IAAI,CAACC,SAAS,CAACD,CAAC,CAACE,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;IAGnD;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAEF;;;AA5CWzB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDbjC/B,8BAAuB;MAEnBA,qEAsBM;MAEVA,iBAAM;;;MAxBoEA,eAAa;MAAbA,wCAAa","names":["i0","OrderDetailComponent","constructor","router","authService","foodService","orderService","userService","orderId","err","status","alert","navigate","console","log","JSON","parse","error","message","statusText","ngOnInit","route","paramMap","subscribe","p","findOrder","get","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/order-detail/order-detail.component.html","/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/order-detail/order-detail.component.ts"],"sourcesContent":["<div class=\"container\">\n\n    <div class=\"card mb-3\" style=\"max-width: 100%;\" *ngFor=\"let orderItem of orderItems\">\n        <div class=\"row g-0\">\n\n            <div class=\"col-md-4\">\n                <!--<img [src]=\"food.imageUrl\" class=\"img-fluid rounded-start\" [alt]=\"food.name\">-->\n            </div>\n\n            <div class=\"col-md-8\">\n                <div class=\"card-body\">\n                    <!--<h4 class=\"card-title\"> {{ category }} </h4>\n                    <h5 class=\"card-title\"> {{ food.name }} </h5>\n                    <p class=\"card-text\"> {{ food.description }} </p>\n                    <p class=\"card-text\"> It will be preperad in {{ food.preperationTime }} minutes </p>\n                    <p class=\"card-text\">  $ {{ food.price }} </p>-->\n                </div>\n            </div>\n\n\n\n\n\n        </div>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { OrderRm, FoodRm, OrderItem, UserRm, OrderDto } from '../api/models';\nimport { CategoryService, FoodService, UserService, OrderService } from '../api/services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from './../auth/auth.service';\nimport { forkJoin } from 'rxjs';\n\n\n@Component({\n  selector: 'app-order-detail',\n  templateUrl: './order-detail.component.html',\n  styleUrls: ['./order-detail.component.css']\n})\nexport class OrderDetailComponent implements OnInit{\n\n  orderId: string = 'not loaded';\n  order: OrderRm = {};\n  orderItems: OrderItem[] = [];\n  foods: FoodRm[] = [];\n\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private foodService: FoodService,\n    private orderService: OrderService,\n    private userService: UserService) { }\n\n\n  ngOnInit(): void {\n\n    this.route.paramMap\n      .subscribe(p => this.findOrder(p.get(\"orderId\")))\n\n\n    //this.orderService.getOrderItemsOrder({ orderId:  })\n\n    //g({ email: this.authService.currentUser?.email! })\n    //.subscribe(\n    //  (basket) => {\n    //    this.basket = basket;\n    //    console.log(this.basket);\n    //    // Fetch food data for each order\n    //    const foodObservables = basket.map((orderItem) =>\n    //      this.foodService.findFood({ id: orderItem.foodItemId! })\n    //    );\n\n    //    forkJoin(foodObservables).subscribe(\n    //      (foods) => {\n    //        // All food requests have completed here\n    //        this.foods = foods;\n    //      },\n    //      (err) => this.handleError(err)\n    //    );\n    //  },\n    //  (err) => this.handleError(err)\n    //);\n\n  }\n\n  private findOrder = (orderId: string | null) => {\n    //this.orderId = orderId ?? 'not passed';\n\n    //this.orderService.findOrder({})\n    //  .subscribe(\n    //    food => {\n    //      this.food = food\n    //      this.getCategory(this.food.categoryId!);\n    //    },\n    //    err => this.handleError(err)\n    //  );\n  }\n\n\n  private handleError = (err: any) => {\n\n    if (err.status == 404) {\n      alert(\"Food not found!\")\n      this.router.navigate(['/menu'])\n    }\n\n\n    if (err.status == 409) {\n      console.log(\"err: \" + err);\n      alert(JSON.parse(err.error).message)\n    }\n\n    console.log(\"Response Error. Status: \", err.status)\n    console.log(\"Response Error. Status Text: \", err.statusText)\n    console.log(err)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}