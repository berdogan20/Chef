{"ast":null,"code":"/* tslint:disable */\n/* eslint-disable */\nimport { HttpResponse } from '@angular/common/http';\nimport { filter, map } from 'rxjs/operators';\nimport { RequestBuilder } from '../../request-builder';\nexport function getUserBasketUser(http, rootUrl, params, context) {\n  const rb = new RequestBuilder(rootUrl, getUserBasketUser.PATH, 'get');\n  if (params) {\n    rb.path('email', params.email, {});\n  }\n  return http.request(rb.build({\n    responseType: 'json',\n    accept: 'text/json',\n    context\n  })).pipe(filter(r => r instanceof HttpResponse), map(r => {\n    return r;\n  }));\n}\ngetUserBasketUser.PATH = '/User/{email}/basket';","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAAkCA,YAAY,QAAQ,sBAAsB;AAE5E,SAASC,MAAM,EAAEC,GAAG,QAAQ,gBAAgB;AAE5C,SAASC,cAAc,QAAQ,uBAAuB;AAQtD,OAAM,SAAUC,iBAAiB,CAACC,IAAgB,EAAEC,OAAe,EAAEC,MAAgC,EAAEC,OAAqB;EAC1H,MAAMC,EAAE,GAAG,IAAIN,cAAc,CAACG,OAAO,EAAEF,iBAAiB,CAACM,IAAI,EAAE,KAAK,CAAC;EACrE,IAAIH,MAAM,EAAE;IACVE,EAAE,CAACE,IAAI,CAAC,OAAO,EAAEJ,MAAM,CAACK,KAAK,EAAE,EAAE,CAAC;;EAGpC,OAAOP,IAAI,CAACQ,OAAO,CACjBJ,EAAE,CAACK,KAAK,CAAC;IAAEC,YAAY,EAAE,MAAM;IAAEC,MAAM,EAAE,WAAW;IAAER;EAAO,CAAE,CAAC,CACjE,CAACS,IAAI,CACJhB,MAAM,CAAEiB,CAAM,IAA6BA,CAAC,YAAYlB,YAAY,CAAC,EACrEE,GAAG,CAAEgB,CAAoB,IAAI;IAC3B,OAAOA,CAAyC;EAClD,CAAC,CAAC,CACH;AACH;AAEAd,iBAAiB,CAACM,IAAI,GAAG,sBAAsB","names":["HttpResponse","filter","map","RequestBuilder","getUserBasketUser","http","rootUrl","params","context","rb","PATH","path","email","request","build","responseType","accept","pipe","r"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/api/fn/user/get-user-basket-user.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\nimport { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\nimport { OrderItem } from '../../models/order-item';\n\nexport interface GetUserBasketUser$Params {\n  email: string;\n}\n\nexport function getUserBasketUser(http: HttpClient, rootUrl: string, params: GetUserBasketUser$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<OrderItem>>> {\n  const rb = new RequestBuilder(rootUrl, getUserBasketUser.PATH, 'get');\n  if (params) {\n    rb.path('email', params.email, {});\n  }\n\n  return http.request(\n    rb.build({ responseType: 'json', accept: 'text/json', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),\n    map((r: HttpResponse<any>) => {\n      return r as StrictHttpResponse<Array<OrderItem>>;\n    })\n  );\n}\n\ngetUserBasketUser.PATH = '/User/{email}/basket';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}