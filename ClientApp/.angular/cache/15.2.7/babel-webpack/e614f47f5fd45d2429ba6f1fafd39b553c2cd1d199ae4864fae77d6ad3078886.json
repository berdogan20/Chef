{"ast":null,"code":"import { forkJoin } from 'rxjs';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./../auth/auth.service\";\nimport * as i3 from \"../api/services\";\nimport * as i4 from \"./../api/services/order.service\";\nimport * as i5 from \"@angular/common\";\nfunction BasketComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4)(2, \"div\", 5);\n    i0.ɵɵelement(3, \"img\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 7)(5, \"div\", 8)(6, \"h5\", 9);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\", 10);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\", 10);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(12, \"br\")(13, \"br\")(14, \"br\");\n    i0.ɵɵelementStart(15, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function BasketComponent_div_1_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.remove(i_r2));\n    });\n    i0.ɵɵtext(16, \" Remove \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const orderItem_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"src\", ctx_r0.foods[i_r2] == null ? null : ctx_r0.foods[i_r2].imageUrl, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r0.foods[i_r2] == null ? null : ctx_r0.foods[i_r2].name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.foods[i_r2] == null ? null : ctx_r0.foods[i_r2].name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.foods[i_r2] == null ? null : ctx_r0.foods[i_r2].description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Amount: \", orderItem_r1.amount, \"\");\n  }\n}\nexport class BasketComponent {\n  constructor(route, router, authService, foodService, orderService, userService, statusService, basketItemService) {\n    this.route = route;\n    this.router = router;\n    this.authService = authService;\n    this.foodService = foodService;\n    this.orderService = orderService;\n    this.userService = userService;\n    this.statusService = statusService;\n    this.basketItemService = basketItemService;\n    this.basket = [];\n    this.foods = [];\n  }\n  ngOnInit() {\n    this.basketItemService.getBasketItemsBasketItem({\n      email: this.authService.currentUser?.email\n    }).subscribe(basket => {\n      this.basket = basket;\n      // Fetch food data for each order\n      const foodObservables = basket.map(basketItem => this.foodService.findFood({\n        id: basketItem.foodId\n      }));\n      forkJoin(foodObservables).subscribe(foods => {\n        // All food requests have completed here\n        this.foods = foods;\n      }, err => this.handleError(err));\n    }, err => this.handleError(err));\n    this.currentUser = this.authService.currentUser;\n  }\n  handleError(err) {\n    console.log(\"Response Error, Status:\", err.status);\n    console.log(\"Response Error, Status Text:\", err.statusText);\n    console.log(err);\n  }\n  order() {\n    let dto = {\n      address: this.authService.currentUser?.address,\n      orderDate: new Date().toISOString(),\n      orderId: uuidv4(),\n      orderOwner: this.authService.currentUser?.email,\n      statusId: 1,\n      totalPayment: this.getTotalPayment()\n    };\n    console.log(dto);\n    //this.orderService.buyOrder({ body: dto })\n    //  .subscribe(_ => {\n    //    for (let basketItem of this.basket) {\n    //      // convert all basketItems to orderItems\n    //      let orderItemDto: OrderItemDto = {\n    //        amount: basketItem.amount,\n    //        foodItemId: basketItem.foodId,\n    //        orderId: dto.orderId,\n    //        orderItemId: uuidv4(),\n    //        price: basketItem.price\n    //      }\n    //    }\n    //    this.basketItemService.deleteBasketItemsByEmailBasketItem({ email: this.authService.currentUser?.email! })\n    //      .subscribe(_ => { }, err => this.handleError(err));\n    //    this.router.navigate(['my-orders']);\n    //  },\n    //    err => this.handleError(err));\n  }\n\n  getTotalPayment() {\n    let total = 0;\n    for (let basketItem of this.basket) {\n      total += basketItem.amount * basketItem.price;\n    }\n    return total;\n  }\n  remove(index) {\n    let itemToRemove = this.basket[index];\n    if (this.currentUser.email) {\n      if (itemToRemove.basketItemId) {\n        this.basketItemService.removeBasketItemBasketItem({\n          email: this.currentUser.email,\n          foodId: itemToRemove.foodId\n        }).subscribe(_ => {}, err => this.handleError(err));\n      }\n    }\n    this.basket.splice(index, 1);\n    this.foods.splice(index, 1);\n  }\n}\nBasketComponent.ɵfac = function BasketComponent_Factory(t) {\n  return new (t || BasketComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.FoodService), i0.ɵɵdirectiveInject(i4.OrderService), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i3.StatusService), i0.ɵɵdirectiveInject(i3.BasketItemService));\n};\nBasketComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BasketComponent,\n  selectors: [[\"app-basket\"]],\n  decls: 4,\n  vars: 1,\n  consts: [[1, \"container\"], [\"class\", \"card mb-3\", \"style\", \"max-width: 100%;\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"click\"], [1, \"card\", \"mb-3\", 2, \"max-width\", \"100%\"], [1, \"row\", \"g-0\"], [1, \"col-md-4\"], [1, \"img-fluid\", \"rounded-start\", 3, \"src\", \"alt\"], [1, \"col-md-8\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [\"type\", \"button\", 1, \"remove-button\", 3, \"click\"]],\n  template: function BasketComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, BasketComponent_div_1_Template, 17, 5, \"div\", 1);\n      i0.ɵɵelementStart(2, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function BasketComponent_Template_button_click_2_listener() {\n        return ctx.order();\n      });\n      i0.ɵɵtext(3, \" Order \");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.basket);\n    }\n  },\n  dependencies: [i5.NgForOf],\n  styles: [\"button[_ngcontent-%COMP%] {\\n  background-color: #b1b2ff;\\n  color: white;\\n  border: 1px solid #b1b2ff;\\n  border-radius: 2rem;\\n  width: 8rem;\\n  height: 2.5rem;\\n  float: right;\\n  margin: 0.1rem 1rem;\\n}\\n.remove-button[_ngcontent-%COMP%] {\\n  background-color: #86bdf6;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n    color: #b1b2ff;\\n    background-color: white;\\n    border: 1px solid #b1b2ff;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYmFza2V0L2Jhc2tldC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWix5QkFBeUI7RUFDekIsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxjQUFjO0VBQ2QsWUFBWTtFQUNaLG1CQUFtQjtBQUNyQjtBQUNBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0lBQ0ksY0FBYztJQUNkLHVCQUF1QjtJQUN2Qix5QkFBeUI7RUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjFiMmZmO1xuICBjb2xvcjogd2hpdGU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNiMWIyZmY7XG4gIGJvcmRlci1yYWRpdXM6IDJyZW07XG4gIHdpZHRoOiA4cmVtO1xuICBoZWlnaHQ6IDIuNXJlbTtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBtYXJnaW46IDAuMXJlbSAxcmVtO1xufVxuLnJlbW92ZS1idXR0b24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjODZiZGY2O1xufVxuXG5idXR0b246aG92ZXIge1xuICAgIGNvbG9yOiAjYjFiMmZmO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNiMWIyZmY7XG4gIH1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAMA,SAASA,QAAQ,QAAQ,MAAM;AAC/B,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;;;;;;;;;;ICN/BC,8BACgD;IAGpCA,yBAAuF;IAC3FA,iBAAM;IACNA,8BAAsB;IAEUA,YAAqB;IAAAA,iBAAK;IAClDA,6BAAqB;IAAAA,YAA2B;IAAAA,iBAAI;IACpDA,8BAAqB;IAACA,aAA8B;IAAAA,iBAAI;IAE5DA,sBAAM;IAGNA,mCAAgE;IAApBA;MAAA;MAAA;MAAA;MAAA,OAASA,kCAAS;IAAA,EAAC;IAAEA,yBAAO;IAAAA,iBAAS;;;;;;IAX5EA,eAA0B;IAA1BA,uGAA0B;IAIHA,eAAqB;IAArBA,4FAAqB;IACxBA,eAA2B;IAA3BA,wFAA2B;IAC1BA,eAA8B;IAA9BA,2DAA8B;;;ADIxE,OAAM,MAAOC,eAAe;EAO1BC,YAAoBC,KAAqB,EAC/BC,MAAc,EACdC,WAAwB,EACxBC,WAAwB,EACxBC,YAA0B,EAC1BC,WAAwB,EACxBC,aAA4B,EAC5BC,iBAAoC;IAP1B,UAAK,GAALP,KAAK;IACf,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;IACX,gBAAW,GAAXC,WAAW;IACX,iBAAY,GAAZC,YAAY;IACZ,gBAAW,GAAXC,WAAW;IACX,kBAAa,GAAbC,aAAa;IACb,sBAAiB,GAAjBC,iBAAiB;IAZ3B,WAAM,GAAiB,EAAE;IACzB,UAAK,GAAa,EAAE;EAW8B;EAGlDC,QAAQ;IAEN,IAAI,CAACD,iBAAiB,CAACE,wBAAwB,CAAC;MAAEC,KAAK,EAAE,IAAI,CAACR,WAAW,CAACS,WAAW,EAAED;IAAM,CAAE,CAAC,CAC7FE,SAAS,CACPC,MAAM,IAAI;MACT,IAAI,CAACA,MAAM,GAAGA,MAAM;MACpB;MACA,MAAMC,eAAe,GAAGD,MAAM,CAACE,GAAG,CAAEC,UAAU,IAC5C,IAAI,CAACb,WAAW,CAACc,QAAQ,CAAC;QAAEC,EAAE,EAAEF,UAAU,CAACG;MAAO,CAAE,CAAC,CACtD;MAEDzB,QAAQ,CAACoB,eAAe,CAAC,CAACF,SAAS,CAChCQ,KAAK,IAAI;QACR;QACA,IAAI,CAACA,KAAK,GAAGA,KAAK;MACpB,CAAC,EACAC,GAAG,IAAK,IAAI,CAACC,WAAW,CAACD,GAAG,CAAC,CAC/B;IACH,CAAC,EACAA,GAAG,IAAK,IAAI,CAACC,WAAW,CAACD,GAAG,CAAC,CACjC;IAED,IAAI,CAACV,WAAW,GAAG,IAAI,CAACT,WAAW,CAACS,WAAY;EAClD;EAIQW,WAAW,CAACD,GAAQ;IAC1BE,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEH,GAAG,CAACI,MAAM,CAAC;IAClDF,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEH,GAAG,CAACK,UAAU,CAAC;IAC3DH,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;EAClB;EAGAM,KAAK;IAEH,IAAIC,GAAG,GAAa;MAClBC,OAAO,EAAE,IAAI,CAAC3B,WAAW,CAACS,WAAW,EAAEkB,OAAO;MAC9CC,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;MACnCC,OAAO,EAAErC,MAAM,EAAE;MACjBsC,UAAU,EAAE,IAAI,CAAChC,WAAW,CAACS,WAAW,EAAED,KAAK;MAC/CyB,QAAQ,EAAE,CAAC;MACXC,YAAY,EAAE,IAAI,CAACC,eAAe;KACnC;IAEDd,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;IAEhB;IACA;IAEA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IAEA;IACA;IACA;IACA;IACA;EACF;;EAEAS,eAAe;IACb,IAAIC,KAAK,GAAG,CAAC;IACb,KAAK,IAAItB,UAAU,IAAI,IAAI,CAACH,MAAM,EAAE;MAClCyB,KAAK,IAAItB,UAAU,CAACuB,MAAO,GAAGvB,UAAU,CAACwB,KAAM;;IAEjD,OAAOF,KAAK;EACd;EAEAG,MAAM,CAACC,KAAa;IAElB,IAAIC,YAAY,GAAG,IAAI,CAAC9B,MAAM,CAAC6B,KAAK,CAAC;IAErC,IAAI,IAAI,CAAC/B,WAAW,CAACD,KAAK,EAAE;MAC1B,IAAIiC,YAAY,CAACC,YAAY,EAAE;QAC7B,IAAI,CAACrC,iBAAiB,CAACsC,0BAA0B,CAAC;UAAEnC,KAAK,EAAE,IAAI,CAACC,WAAW,CAACD,KAAK;UAAES,MAAM,EAAEwB,YAAY,CAACxB;QAAM,CAAE,CAAC,CAC9GP,SAAS,CACRkC,CAAC,IAAG,CAAG,CAAC,EACRzB,GAAG,IAAI,IAAI,CAACC,WAAW,CAACD,GAAG,CAAC,CAC7B;;;IAIP,IAAI,CAACR,MAAM,CAACkC,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;IAC5B,IAAI,CAACtB,KAAK,CAAC2B,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;EAC7B;;AA/GW5C,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAkD;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCf5BvD,8BAAuB;MACnBA,iEAkBM;MAENA,iCAAwC;MAAlBA;QAAA,OAASwD,WAAO;MAAA,EAAC;MAAExD,uBAAM;MAAAA,iBAAS;;;MApB7BA,eAAW;MAAXA,oCAAW","names":["forkJoin","v4","uuidv4","i0","BasketComponent","constructor","route","router","authService","foodService","orderService","userService","statusService","basketItemService","ngOnInit","getBasketItemsBasketItem","email","currentUser","subscribe","basket","foodObservables","map","basketItem","findFood","id","foodId","foods","err","handleError","console","log","status","statusText","order","dto","address","orderDate","Date","toISOString","orderId","orderOwner","statusId","totalPayment","getTotalPayment","total","amount","price","remove","index","itemToRemove","basketItemId","removeBasketItemBasketItem","_","splice","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/basket/basket.component.ts","/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/basket/basket.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { OrderRm, FoodRm, OrderItem, UserRm, OrderDto, BasketItem } from '../api/models';\nimport { BasketItemService, CategoryService, FoodService, StatusService, UserService } from '../api/services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OrderService } from './../api/services/order.service';\nimport { AuthService } from './../auth/auth.service';\nimport { forkJoin } from 'rxjs';\nimport { v4 as uuidv4 } from 'uuid';\n\n\n@Component({\n  selector: 'app-basket',\n  templateUrl: './basket.component.html',\n  styleUrls: ['./basket.component.css']\n})\nexport class BasketComponent {\n\n  basket: BasketItem[] = [];\n  foods: FoodRm[] = [];\n  currentUser!: UserRm;\n\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService,\n    private foodService: FoodService,\n    private orderService: OrderService,\n    private userService: UserService,\n    private statusService: StatusService,\n    private basketItemService: BasketItemService) { }\n\n\n  ngOnInit(): void {\n\n    this.basketItemService.getBasketItemsBasketItem({ email: this.authService.currentUser?.email! })\n      .subscribe(\n        (basket) => {\n          this.basket = basket;\n          // Fetch food data for each order\n          const foodObservables = basket.map((basketItem) =>\n            this.foodService.findFood({ id: basketItem.foodId! })\n          );\n\n          forkJoin(foodObservables).subscribe(\n            (foods) => {\n              // All food requests have completed here\n              this.foods = foods;\n            },\n            (err) => this.handleError(err)\n          );\n        },\n        (err) => this.handleError(err)\n    );\n\n    this.currentUser = this.authService.currentUser!;\n  }\n\n\n\n  private handleError(err: any) {\n    console.log(\"Response Error, Status:\", err.status);\n    console.log(\"Response Error, Status Text:\", err.statusText);\n    console.log(err);\n  }\n\n\n  order() {\n\n    let dto: OrderDto = {\n      address: this.authService.currentUser?.address,\n      orderDate: new Date().toISOString(),\n      orderId: uuidv4(), \n      orderOwner: this.authService.currentUser?.email,\n      statusId: 1,\n      totalPayment: this.getTotalPayment()\n    }\n\n    console.log(dto);\n\n    //this.orderService.buyOrder({ body: dto })\n    //  .subscribe(_ => {\n\n    //    for (let basketItem of this.basket) {\n\n    //      // convert all basketItems to orderItems\n    //      let orderItemDto: OrderItemDto = {\n    //        amount: basketItem.amount,\n    //        foodItemId: basketItem.foodId,\n    //        orderId: dto.orderId,\n    //        orderItemId: uuidv4(),\n    //        price: basketItem.price\n    //      }\n\n    //    }\n\n    //    this.basketItemService.deleteBasketItemsByEmailBasketItem({ email: this.authService.currentUser?.email! })\n    //      .subscribe(_ => { }, err => this.handleError(err));\n    //    this.router.navigate(['my-orders']);\n    //  },\n    //    err => this.handleError(err));\n  }\n\n  getTotalPayment(): number{\n    let total = 0;\n    for (let basketItem of this.basket) {\n      total += basketItem.amount! * basketItem.price!;\n    }\n    return total;\n  }\n\n  remove(index: number) {\n\n    let itemToRemove = this.basket[index];\n\n    if (this.currentUser.email) {\n      if (itemToRemove.basketItemId) {\n        this.basketItemService.removeBasketItemBasketItem({ email: this.currentUser.email, foodId: itemToRemove.foodId })\n          .subscribe(\n            _ => { },\n            err => this.handleError(err)\n          );\n      }\n    }\n\n    this.basket.splice(index, 1);\n    this.foods.splice(index, 1);\n  }\n\n\n}\n","<div class=\"container\">\n    <div *ngFor=\"let orderItem of basket; let i = index\"\n         class=\"card mb-3\" style=\"max-width: 100%;\">\n        <div class=\"row g-0\">\n            <div class=\"col-md-4\">\n                <img [src]=\"foods[i]?.imageUrl\" class=\"img-fluid rounded-start\" [alt]=\"foods[i]?.name\">\n            </div>\n            <div class=\"col-md-8\">\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\"> {{ foods[i]?.name }} </h5>\n                    <p class=\"card-text\">{{ foods[i]?.description }}</p>\n                    <p class=\"card-text\"> Amount: {{ orderItem.amount }}</p>\n                </div>\n                <br />\n                <br />\n                <br />\n                <button class=\"remove-button\" type=\"button\" (click)=\"remove(i)\"> Remove </button>\n            </div>\n        </div>\n    </div>\n    \n    <button type=\"button\" (click)=\"order()\"> Order </button>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}