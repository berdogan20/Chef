{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { forkJoin } from 'rxjs';\nlet MyOrdersComponent = class MyOrdersComponent {\n  constructor(orderService, foodService, authService) {\n    this.orderService = orderService;\n    this.foodService = foodService;\n    this.authService = authService;\n    this.orders = [];\n    this.foods = [];\n  }\n  ngOnInit() {\n    console.log(this.authService.currentUser?.email);\n    this.orderService.listOrder({\n      email: this.authService.currentUser?.email ?? ''\n    }).subscribe(orders => {\n      this.orders = orders;\n      // Fetch food data for each order\n      const foodObservables = orders.map(order => this.foodService.findFood({\n        id: order.foodId\n      }));\n      forkJoin(foodObservables).subscribe(foods => {\n        // All food requests have completed here\n        this.foods = foods;\n      }, err => this.handleError(err));\n    }, err => this.handleError(err));\n  }\n  handleError(err) {\n    console.log(\"Response Error, Status:\", err.status);\n    console.log(\"Response Error, Status Text:\", err.statusText);\n    console.log(err);\n  }\n};\nMyOrdersComponent = __decorate([Component({\n  selector: 'app-my-orders',\n  templateUrl: './my-orders.component.html',\n  styleUrls: ['./my-orders.component.css']\n})], MyOrdersComponent);\nexport { MyOrdersComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAKjD,SAASC,QAAQ,QAAQ,MAAM;AAOxB,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAK5BC,YAAoBC,YAA0B,EACpCC,WAAwB,EACxBC,WAAwB;IAFd,iBAAY,GAAZF,YAAY;IACtB,gBAAW,GAAXC,WAAW;IACX,gBAAW,GAAXC,WAAW;IALrB,WAAM,GAAc,EAAE;IACtB,UAAK,GAAa,EAAE;EAIkB;EAGtCC,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,WAAW,CAACI,WAAW,EAAEC,KAAK,CAAC;IAEhD,IAAI,CAACP,YAAY,CAACQ,SAAS,CAAC;MAAED,KAAK,EAAE,IAAI,CAACL,WAAW,CAACI,WAAW,EAAEC,KAAK,IAAI;IAAE,CAAE,CAAC,CAC9EE,SAAS,CACPC,MAAM,IAAI;MACT,IAAI,CAACA,MAAM,GAAGA,MAAM;MAEpB;MACA,MAAMC,eAAe,GAAGD,MAAM,CAACE,GAAG,CAAEC,KAAK,IACvC,IAAI,CAACZ,WAAW,CAACa,QAAQ,CAAC;QAAEC,EAAE,EAAEF,KAAK,CAACG;MAAO,CAAE,CAAC,CACjD;MAEDnB,QAAQ,CAACc,eAAe,CAAC,CAACF,SAAS,CAChCQ,KAAK,IAAI;QACR;QACA,IAAI,CAACA,KAAK,GAAGA,KAAK;MACpB,CAAC,EACAC,GAAG,IAAK,IAAI,CAACC,WAAW,CAACD,GAAG,CAAC,CAC/B;IACH,CAAC,EACAA,GAAG,IAAK,IAAI,CAACC,WAAW,CAACD,GAAG,CAAC,CAC/B;EACL;EAIQC,WAAW,CAACD,GAAQ;IAC1Bd,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEa,GAAG,CAACE,MAAM,CAAC;IAClDhB,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEa,GAAG,CAACG,UAAU,CAAC;IAC3DjB,OAAO,CAACC,GAAG,CAACa,GAAG,CAAC;EAClB;CAGD;AA5CYpB,iBAAiB,eAL7BF,SAAS,CAAC;EACT0B,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACW1B,iBAAiB,CA4C7B;SA5CYA,iBAAiB","names":["Component","forkJoin","MyOrdersComponent","constructor","orderService","foodService","authService","ngOnInit","console","log","currentUser","email","listOrder","subscribe","orders","foodObservables","map","order","findFood","id","foodId","foods","err","handleError","status","statusText","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/my-orders/my-orders.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { OrderRm, FoodRm} from '../api/models';\nimport { FoodService } from '../api/services';\nimport { OrderService } from './../api/services/order.service';\nimport { AuthService } from './../auth/auth.service';\nimport { forkJoin } from 'rxjs';\n\n@Component({\n  selector: 'app-my-orders',\n  templateUrl: './my-orders.component.html',\n  styleUrls: ['./my-orders.component.css']\n})\nexport class MyOrdersComponent {\n\n  orders: OrderRm[] = [];\n  foods: FoodRm[] = [];\n\n  constructor(private orderService: OrderService,\n    private foodService: FoodService,\n    private authService: AuthService) { }\n\n\n  ngOnInit(): void {\n    console.log(this.authService.currentUser?.email);\n\n    this.orderService.listOrder({ email: this.authService.currentUser?.email ?? '' })\n      .subscribe(\n        (orders) => {\n          this.orders = orders;\n\n          // Fetch food data for each order\n          const foodObservables = orders.map((order) =>\n            this.foodService.findFood({ id: order.foodId! })\n          );\n\n          forkJoin(foodObservables).subscribe(\n            (foods) => {\n              // All food requests have completed here\n              this.foods = foods;\n            },\n            (err) => this.handleError(err)\n          );\n        },\n        (err) => this.handleError(err)\n      );\n  }\n\n\n\n  private handleError(err: any) {\n    console.log(\"Response Error, Status:\", err.status);\n    console.log(\"Response Error, Status Text:\", err.statusText);\n    console.log(err);\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}