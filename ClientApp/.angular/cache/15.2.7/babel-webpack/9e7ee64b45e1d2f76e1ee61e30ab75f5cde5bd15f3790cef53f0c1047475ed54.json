{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../api/services\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../auth/auth.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction SignInComponent_small_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 12);\n    i0.ɵɵtext(1, \" No such email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignInComponent_small_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 12);\n    i0.ɵɵtext(1, \" Incorrect password \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class SignInComponent {\n  constructor(userService, fb, authService, router, activatedRoute) {\n    this.userService = userService;\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.requestedUrl = undefined;\n    this.noSuchEmail = false;\n    this.incorrectPassword = false;\n    this.form = this.fb.group({\n      email: [''],\n      password: ['']\n    });\n    this.login = user => {\n      this.authService.loginUser({\n        address: user.address,\n        email: user.email,\n        password: user.password\n      });\n      console.log(this.form.get('address')?.value);\n      this.router.navigate(['/menu']);\n    };\n  }\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(p => this.requestedUrl = p['requestedUrl']);\n  }\n  signin() {\n    if (this.form.invalid) return;\n    let givenPassword = this.form.value.password;\n    console.log(\"Form Values:\", this.form.value);\n    this.userService.findUser({\n      email: this.form.value.email\n    }).subscribe(r => {\n      if (givenPassword == r.password) {\n        this.currentUser = r;\n        this.login(this.currentUser);\n      } else {\n        this.incorrectPassword = true;\n      }\n    }, console.error);\n  }\n  checkPassenger() {\n    const params = {\n      email: this.form.get('email')?.value\n    };\n    this.userService.findUser(params).subscribe(_ => {}, e => {\n      if (e.status == 404) {\n        this.noSuchEmail = true;\n      }\n    });\n  }\n}\nSignInComponent.ɵfac = function SignInComponent_Factory(t) {\n  return new (t || SignInComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n};\nSignInComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignInComponent,\n  selectors: [[\"app-sign-in\"]],\n  decls: 20,\n  vars: 3,\n  consts: [[1, \"container\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"name\", \"email\", \"id\", \"email\", \"placeholder\", \"Enter email\", \"formControlName\", \"email\", \"required\", \"\", \"email\", \"\", 1, \"form-control\", 3, \"blur\"], [\"class\", \"form-text text-muted\", \"style\", \" color: hsl(0, 78%, 75%)!important\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", \"id\", \"password\", \"placeholder\", \"Password\", \"required\", \"\", 1, \"form-control\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"name\", \"checkbox\", \"id\", \"checkbox\", \"required\", \"\", 1, \"form-check-input\"], [\"for\", \"gridCheck\", 1, \"form-check-label\"], [\"type\", \"submit\", \"aria-hidden\", \"true\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"form-text\", \"text-muted\", 2, \"color\", \"hsl(0, 78%, 75%)!important\"]],\n  template: function SignInComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"header\")(1, \"div\", 0)(2, \"form\", 1)(3, \"div\", 2)(4, \"label\", 3);\n      i0.ɵɵtext(5, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 4);\n      i0.ɵɵlistener(\"blur\", function SignInComponent_Template_input_blur_6_listener() {\n        return ctx.checkPassenger();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(7, SignInComponent_small_7_Template, 2, 0, \"small\", 5);\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 6);\n      i0.ɵɵtext(10, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, SignInComponent_small_12_Template, 2, 0, \"small\", 5);\n      i0.ɵɵelementStart(13, \"div\", 8);\n      i0.ɵɵelement(14, \"input\", 9);\n      i0.ɵɵelementStart(15, \"label\", 10);\n      i0.ɵɵtext(16, \" Check me out \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(17, \"br\");\n      i0.ɵɵelementStart(18, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function SignInComponent_Template_button_click_18_listener() {\n        return ctx.signin();\n      });\n      i0.ɵɵtext(19, \" Sign in \");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.noSuchEmail);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.incorrectPassword);\n    }\n  },\n  dependencies: [i5.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.EmailValidator, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"header[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding-left: 25%;\\n  margin-top: 2rem;\\n}\\n\\n#email[_ngcontent-%COMP%] {\\n  width: 60%;\\n}\\n\\n#password[_ngcontent-%COMP%] {\\n  width: 60%;\\n}\\n\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  padding: 0.4rem 2rem;\\n  background-color: #86bdf6;\\n  color: white;\\n}\\n\\n  .container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n    color: #86bdf6;\\n    background-color: white;\\n    border: 1px solid #86bdf6;\\n  }\\n\\n#register[_ngcontent-%COMP%] {\\n  background-color: transparent;\\n  color: #86bdf6;\\n  border: none;\\n  border-radius: 1rem;\\n  padding: 0.2rem;\\n}\\n\\n  #register[_ngcontent-%COMP%]:hover {\\n    color: #509578;\\n  }\\n\\ninput.ng-invalid.ng-touched[_ngcontent-%COMP%] {\\n  border: 1px solid red;\\n}\\n\\n.help-block[_ngcontent-%COMP%] {\\n  color: rgb(223, 134, 134);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2lnbi1pbi9zaWduLWluLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixpQkFBaUI7RUFDakIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0Usb0JBQW9CO0VBQ3BCLHlCQUF5QjtFQUN6QixZQUFZO0FBQ2Q7O0VBRUU7SUFDRSxjQUFjO0lBQ2QsdUJBQXVCO0lBQ3ZCLHlCQUF5QjtFQUMzQjs7QUFFRjtFQUNFLDZCQUE2QjtFQUM3QixjQUFjO0VBQ2QsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQixlQUFlO0FBQ2pCOztFQUVFO0lBQ0UsY0FBYztFQUNoQjs7QUFFRjtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQiIsInNvdXJjZXNDb250ZW50IjpbImhlYWRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nLWxlZnQ6IDI1JTtcbiAgbWFyZ2luLXRvcDogMnJlbTtcbn1cblxuI2VtYWlsIHtcbiAgd2lkdGg6IDYwJTtcbn1cblxuI3Bhc3N3b3JkIHtcbiAgd2lkdGg6IDYwJTtcbn1cblxuLmNvbnRhaW5lciBmb3JtIGJ1dHRvbiB7XG4gIHBhZGRpbmc6IDAuNHJlbSAycmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjODZiZGY2O1xuICBjb2xvcjogd2hpdGU7XG59XG5cbiAgLmNvbnRhaW5lciBmb3JtIGJ1dHRvbjpob3ZlciB7XG4gICAgY29sb3I6ICM4NmJkZjY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzg2YmRmNjtcbiAgfVxuXG4jcmVnaXN0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgY29sb3I6ICM4NmJkZjY7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogMXJlbTtcbiAgcGFkZGluZzogMC4ycmVtO1xufVxuXG4gICNyZWdpc3Rlcjpob3ZlciB7XG4gICAgY29sb3I6ICM1MDk1Nzg7XG4gIH1cblxuaW5wdXQubmctaW52YWxpZC5uZy10b3VjaGVkIHtcbiAgYm9yZGVyOiAxcHggc29saWQgcmVkO1xufVxuXG4uaGVscC1ibG9jayB7XG4gIGNvbG9yOiByZ2IoMjIzLCAxMzQsIDEzNCk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","SignInComponent","constructor","userService","fb","authService","router","activatedRoute","undefined","group","email","password","user","loginUser","address","console","log","form","get","value","navigate","ngOnInit","params","subscribe","p","requestedUrl","signin","invalid","givenPassword","findUser","r","currentUser","login","incorrectPassword","error","checkPassenger","_","e","status","noSuchEmail","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/sign-in/sign-in.component.html","/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/sign-in/sign-in.component.ts"],"sourcesContent":["<!-- <p>register works!</p> -->\n\n<header>\n    <div class=\"container\">\n\n        <form [formGroup]=\"form\">\n\n            <div class=\"form-group \">\n                <label for=\"email\">Email</label>\n                <input type=\"email\"\n                       name=\"email\"\n                       class=\"form-control\"\n                       id=\"email\"\n                       placeholder=\"Enter email\"\n                       formControlName=\"email\"\n                       required\n                       (blur)=\"checkPassenger()\"\n                       email>\n            </div>\n            <small *ngIf=\"noSuchEmail\"\n                   class=\"form-text text-muted\" style=\" color: hsl(0, 78%, 75%)!important\">\n                No such email\n            </small>\n\n            <div class=\"form-group \">\n                <label for=\"password\">Password</label>\n                <input type=\"password\"\n                       name=\"password\"\n                       formControlName=\"password\"\n                       class=\"form-control\"\n                       id=\"password\"\n                       placeholder=\"Password\"\n                       required>\n            </div>\n            <small *ngIf=\"incorrectPassword\"\n                   class=\"form-text text-muted\" style=\" color: hsl(0, 78%, 75%)!important\">\n                Incorrect password\n            </small>\n\n\n            <div class=\"form-check\">\n                <input type=\"checkbox\"\n                       name=\"checkbox\"\n                       class=\"form-check-input\"\n                       id=\"checkbox\"\n                       required>\n                <label class=\"form-check-label\" for=\"gridCheck\">\n                    Check me out\n                </label>\n            </div>\n\n\n            <br>\n            <button (click)=\"signin()\"\n                    type=\"submit\"\n                    class=\"btn btn-primary\"\n                    aria-hidden=\"true\">\n                Sign in\n            </button>\n\n\n\n\n        </form>\n\n    </div>\n</header>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { UserService } from '../api/services';\nimport { AuthService } from '../auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserRm } from '../api/models';\n\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent {\n\n  constructor(private userService: UserService,\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute) { }\n\n  requestedUrl?: string = undefined\n  public noSuchEmail = false;\n  public incorrectPassword = false;\n  public currentUser: UserRm;\n\n  form = this.fb.group({\n    email: [''],\n    password: [''],\n  })\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(p => this.requestedUrl = p['requestedUrl'])\n  }\n\n\n  signin() {\n\n    if (this.form.invalid)\n      return;\n\n    let givenPassword = this.form.value.password;\n    console.log(\"Form Values:\", this.form.value);\n\n    this.userService.findUser({\n      email: this.form.value.email!\n    })\n      .subscribe(r => {\n        if (givenPassword == r.password) {\n          this.currentUser = r;\n          this.login(this.currentUser);\n        }\n        else {\n          this.incorrectPassword = true;\n        }\n      }, console.error)\n  }\n\n  checkPassenger(): void {\n    const params = { email: this.form.get('email')?.value! }\n\n    this.userService\n      .findUser(params)\n      .subscribe(\n        _ => {}, e => {\n          if (e.status == 404) {\n            this.noSuchEmail = true;\n          }\n        }\n      )\n  }\n\n\n\n\n  private login = (user: UserRm) => {\n    this.authService.loginUser({\n      address: user.address,\n      email: user.email,\n      password: user.password\n    })\n    console.log(this.form.get('address')?.value!);\n    this.router.navigate(['/menu'])\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}