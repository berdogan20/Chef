{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api/services\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../auth/auth.service\";\nimport * as i4 from \"@angular/router\";\nexport class SignInComponent {\n  constructor(userService, fb, authService, router, activatedRoute) {\n    this.userService = userService;\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.requestedUrl = undefined;\n    this.incorrectPassword = false;\n    this.form = this.fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(100)])],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(2), Validators.maxLength(35)])]\n    });\n    this.login = () => {\n      this.authService.loginUser({\n        email: this.form.get('email')?.value\n      });\n      this.router.navigate([this.requestedUrl ?? '/menu']);\n    };\n  }\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(p => this.requestedUrl = p['requestedUrl']);\n  }\n  signin() {\n    let givenPassword;\n    if (this.form.invalid) return;\n    console.log(\"Form Values:\", this.form.value);\n    this.userService.findUser({\n      email: this.form.value.email\n    }).subscribe(r => {\n      if (givenPassword == r.password) {\n        this.login;\n      } else {\n        this.incorrectPassword = true;\n      }\n    }, console.error);\n  }\n}\nSignInComponent.ɵfac = function SignInComponent_Factory(t) {\n  return new (t || SignInComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n};\nSignInComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignInComponent,\n  selectors: [[\"app-sign-in\"]],\n  decls: 21,\n  vars: 1,\n  consts: [[1, \"container\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"name\", \"email\", \"id\", \"email\", \"placeholder\", \"Enter email\", \"formControlName\", \"email\", \"required\", \"\", \"email\", \"\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", \"id\", \"password\", \"placeholder\", \"Password\", \"required\", \"\", 1, \"form-control\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"name\", \"checkbox\", \"id\", \"checkbox\", \"required\", \"\", 1, \"form-check-input\"], [\"for\", \"gridCheck\", 1, \"form-check-label\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"form-text\", \"text-muted\", 2, \"color\", \"hsl(0, 78%, 75%)!important\"]],\n  template: function SignInComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"header\")(1, \"div\", 0)(2, \"form\", 1)(3, \"div\", 2)(4, \"label\", 3);\n      i0.ɵɵtext(5, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 2)(8, \"label\", 5);\n      i0.ɵɵtext(9, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 7);\n      i0.ɵɵelement(12, \"input\", 8);\n      i0.ɵɵelementStart(13, \"label\", 9);\n      i0.ɵɵtext(14, \" Check me out \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(15, \"br\");\n      i0.ɵɵelementStart(16, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function SignInComponent_Template_button_click_16_listener() {\n        return ctx.signin();\n      });\n      i0.ɵɵtext(17, \" Sign in \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"br\");\n      i0.ɵɵelementStart(19, \"small\", 11);\n      i0.ɵɵtext(20, \" This email adress already exists. \");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.EmailValidator, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"header[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding-left: 25%;\\n  margin-top: 2rem;\\n}\\n\\n#email[_ngcontent-%COMP%] {\\n  width: 60%;\\n}\\n\\n#password[_ngcontent-%COMP%] {\\n  width: 60%;\\n}\\n\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  padding: 0.4rem 2rem;\\n  background-color: #86bdf6;\\n  color: white;\\n}\\n\\n  .container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n    color: #86bdf6;\\n    background-color: white;\\n    border: 1px solid #86bdf6;\\n  }\\n\\n#register[_ngcontent-%COMP%] {\\n  background-color: transparent;\\n  color: #86bdf6;\\n  border: none;\\n  border-radius: 1rem;\\n  padding: 0.2rem;\\n}\\n\\n  #register[_ngcontent-%COMP%]:hover {\\n    color: #509578;\\n  }\\n\\ninput.ng-invalid.ng-touched[_ngcontent-%COMP%] {\\n  border: 1px solid red;\\n}\\n\\n.help-block[_ngcontent-%COMP%] {\\n  color: rgb(223, 134, 134);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2lnbi1pbi9zaWduLWluLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixpQkFBaUI7RUFDakIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0Usb0JBQW9CO0VBQ3BCLHlCQUF5QjtFQUN6QixZQUFZO0FBQ2Q7O0VBRUU7SUFDRSxjQUFjO0lBQ2QsdUJBQXVCO0lBQ3ZCLHlCQUF5QjtFQUMzQjs7QUFFRjtFQUNFLDZCQUE2QjtFQUM3QixjQUFjO0VBQ2QsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQixlQUFlO0FBQ2pCOztFQUVFO0lBQ0UsY0FBYztFQUNoQjs7QUFFRjtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQiIsInNvdXJjZXNDb250ZW50IjpbImhlYWRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nLWxlZnQ6IDI1JTtcbiAgbWFyZ2luLXRvcDogMnJlbTtcbn1cblxuI2VtYWlsIHtcbiAgd2lkdGg6IDYwJTtcbn1cblxuI3Bhc3N3b3JkIHtcbiAgd2lkdGg6IDYwJTtcbn1cblxuLmNvbnRhaW5lciBmb3JtIGJ1dHRvbiB7XG4gIHBhZGRpbmc6IDAuNHJlbSAycmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjODZiZGY2O1xuICBjb2xvcjogd2hpdGU7XG59XG5cbiAgLmNvbnRhaW5lciBmb3JtIGJ1dHRvbjpob3ZlciB7XG4gICAgY29sb3I6ICM4NmJkZjY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzg2YmRmNjtcbiAgfVxuXG4jcmVnaXN0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgY29sb3I6ICM4NmJkZjY7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogMXJlbTtcbiAgcGFkZGluZzogMC4ycmVtO1xufVxuXG4gICNyZWdpc3Rlcjpob3ZlciB7XG4gICAgY29sb3I6ICM1MDk1Nzg7XG4gIH1cblxuaW5wdXQubmctaW52YWxpZC5uZy10b3VjaGVkIHtcbiAgYm9yZGVyOiAxcHggc29saWQgcmVkO1xufVxuXG4uaGVscC1ibG9jayB7XG4gIGNvbG9yOiByZ2IoMjIzLCAxMzQsIDEzNCk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAAsBA,UAAU,QAAQ,gBAAgB;;;;;;AAWxD,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,WAAwB,EAClCC,EAAe,EACfC,WAAwB,EACxBC,MAAc,EACdC,cAA8B;IAJpB,gBAAW,GAAXJ,WAAW;IACrB,OAAE,GAAFC,EAAE;IACF,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;IACN,mBAAc,GAAdC,cAAc;IAExB,iBAAY,GAAYC,SAAS;IAC1B,sBAAiB,GAAG,KAAK;IAEhC,SAAI,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MACnBC,KAAK,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACW,OAAO,CAAC,CAACX,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACa,SAAS,CAAC,CAAC,CAAC,EAAEb,UAAU,CAACc,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC1GC,QAAQ,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACW,OAAO,CAAC,CAACX,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACa,SAAS,CAAC,CAAC,CAAC,EAAEb,UAAU,CAACc,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;KAC5G,CAAC;IAgCM,UAAK,GAAG,MAAK;MACnB,IAAI,CAACT,WAAW,CAACW,SAAS,CAAC;QAAEN,KAAK,EAAE,IAAI,CAACO,IAAI,CAACC,GAAG,CAAC,OAAO,CAAC,EAAEC;MAAM,CAAE,CAAC;MACrE,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,IAAI,CAACC,YAAY,IAAI,OAAO,CAAC,CAAC;IACtD,CAAC;EA3C2C;EAU5CC,QAAQ;IACN,IAAI,CAACf,cAAc,CAACgB,MAAM,CAACC,SAAS,CAACC,CAAC,IAAI,IAAI,CAACJ,YAAY,GAAGI,CAAC,CAAC,cAAc,CAAC,CAAC;EAClF;EAGAC,MAAM;IAEJ,IAAIC,aAAqB;IAEzB,IAAI,IAAI,CAACV,IAAI,CAACW,OAAO,EACnB;IAEFC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE,IAAI,CAACb,IAAI,CAACE,KAAK,CAAC;IAE5C,IAAI,CAAChB,WAAW,CAAC4B,QAAQ,CAAC;MACxBrB,KAAK,EAAE,IAAI,CAACO,IAAI,CAACE,KAAK,CAACT;KACxB,CAAC,CACCc,SAAS,CAACQ,CAAC,IAAG;MACb,IAAIL,aAAa,IAAIK,CAAC,CAACjB,QAAQ,EAAE;QAC/B,IAAI,CAACkB,KAAK;OACX,MACI;QACH,IAAI,CAACC,iBAAiB,GAAG,IAAI;;IAEjC,CAAC,EAAEL,OAAO,CAACM,KAAK,CAAC;EACrB;;AAzCWlC,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAmC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV5BC,8BAAQ;MAM2BA,qBAAK;MAAAA,iBAAQ;MAChCA,2BAOa;MACjBA,iBAAM;MAENA,8BAAyB;MACCA,wBAAQ;MAAAA,iBAAQ;MACtCA,4BAMgB;MACpBA,iBAAM;MAGNA,+BAAwB;MACpBA,4BAIgB;MAChBA,iCAAgD;MAC5CA,+BACJ;MAAAA,iBAAQ;MAIZA,sBAAI;MACJA,mCAE2B;MAAnBA;QAAA,OAASC,YAAQ;MAAA,EAAC;MACtBD,0BACJ;MAAAA,iBAAS;MAETA,sBAAI;MACJA,kCAC+E;MAC3EA,oDACJ;MAAAA,iBAAQ;;;MAjDNA,eAAkB;MAAlBA,oCAAkB","names":["Validators","SignInComponent","constructor","userService","fb","authService","router","activatedRoute","undefined","group","email","compose","required","minLength","maxLength","password","loginUser","form","get","value","navigate","requestedUrl","ngOnInit","params","subscribe","p","signin","givenPassword","invalid","console","log","findUser","r","login","incorrectPassword","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/sign-in/sign-in.component.ts","/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/sign-in/sign-in.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { UserService } from '../api/services';\nimport { AuthService } from '../auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent {\n\n  constructor(private userService: UserService,\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute) { }\n\n  requestedUrl?: string = undefined\n  public incorrectPassword = false;\n\n  form = this.fb.group({\n    email: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(100)])],\n    password: ['', Validators.compose([Validators.required, Validators.minLength(2), Validators.maxLength(35)])],\n  })\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(p => this.requestedUrl = p['requestedUrl'])\n  }\n\n\n  signin() {\n\n    let givenPassword: string;\n\n    if (this.form.invalid)\n      return;\n\n    console.log(\"Form Values:\", this.form.value);\n\n    this.userService.findUser({\n      email: this.form.value.email!\n    })\n      .subscribe(r => {\n        if (givenPassword == r.password) {\n          this.login;\n        }\n        else {\n          this.incorrectPassword = true;\n        }\n      }, console.error)\n  }\n\n\n\n\n  private login = () => {\n    this.authService.loginUser({ email: this.form.get('email')?.value! })\n    this.router.navigate([this.requestedUrl ?? '/menu'])\n  }\n\n}\n","<!-- <p>register works!</p> -->\n\n<header>\n    <div class=\"container\">\n\n        <form [formGroup]=\"form\">\n\n            <div class=\"form-group \">\n                <label for=\"email\">Email</label>\n                <input type=\"email\"\n                       name=\"email\"\n                       class=\"form-control\"\n                       id=\"email\"\n                       placeholder=\"Enter email\"\n                       formControlName=\"email\"\n                       required\n                       email>\n            </div>\n\n            <div class=\"form-group \">\n                <label for=\"password\">Password</label>\n                <input type=\"password\"\n                       name=\"password\"\n                       formControlName=\"password\"\n                       class=\"form-control\"\n                       id=\"password\"\n                       placeholder=\"Password\"\n                       required>\n            </div>\n\n\n            <div class=\"form-check\">\n                <input type=\"checkbox\"\n                       name=\"checkbox\"\n                       class=\"form-check-input\"\n                       id=\"checkbox\"\n                       required>\n                <label class=\"form-check-label\" for=\"gridCheck\">\n                    Check me out\n                </label>\n            </div>\n\n\n            <br>\n            <button type=\"submit\"\n                    class=\"btn btn-primary\"\n                    (click)=\"signin()\">\n                Sign in\n            </button>\n\n            <br>\n            <small\n                   class=\"form-text text-muted\" style=\" color: hsl(0, 78%, 75%)!important\">\n                This email adress already exists.\n            </small>\n\n\n        </form>\n\n    </div>\n</header>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}