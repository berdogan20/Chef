{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../auth/auth.service\";\nimport * as i3 from \"../api/services\";\nimport * as i4 from \"@angular/forms\";\nexport class EditFoodComponent {\n  constructor(route, router, authService, foodService, orderService, fb) {\n    this.route = route;\n    this.router = router;\n    this.authService = authService;\n    this.foodService = foodService;\n    this.orderService = orderService;\n    this.fb = fb;\n    this.foodId = 'not loaded';\n    this.food = {};\n    this.findFood = foodId => {\n      this.foodId = foodId ?? 'not passed';\n      this.foodService.findFood({\n        id: this.foodId\n      }).subscribe(food => this.food = food, err => this.handleError(err));\n      console.log(this.foodId);\n    };\n    this.handleError = err => {\n      if (err.status == 404) {\n        alert(\"Food not found!\");\n        this.router.navigate(['/menu']);\n      }\n      if (err.status == 409) {\n        console.log(\"err: \" + err);\n        alert(JSON.parse(err.error).message);\n      }\n      console.log(\"Response Error. Status: \", err.status);\n      console.log(\"Response Error. Status Text: \", err.statusText);\n      console.log(err);\n    };\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      name: [this.food.name, Validators.required],\n      description: [this.food.description, Validators.required],\n      price: [this.food.price, Validators.required],\n      preperationTime: [this.food.preperationTime]\n    });\n    this.route.paramMap.subscribe(p => this.findFood(p.get(\"foodId\")));\n  }\n  saveChanges() {\n    console.log(this.form);\n    let dto = {\n      description: this.form.value.description,\n      id: this.foodId,\n      imageUrl: this.food.imageUrl,\n      name: this.form.value.name,\n      preperationTime: Number(this.form.value.preperationTime),\n      price: Number(this.form.value.price)\n    };\n    this.foodService.editFood({\n      id: this.foodId,\n      body: dto\n    }).subscribe(_ => {}, err => this.handleError(err));\n    this.router.navigate(['/menu']);\n  }\n}\nEditFoodComponent.ɵfac = function EditFoodComponent_Factory(t) {\n  return new (t || EditFoodComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.FoodService), i0.ɵɵdirectiveInject(i3.OrderService), i0.ɵɵdirectiveInject(i4.FormBuilder));\n};\nEditFoodComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditFoodComponent,\n  selectors: [[\"app-edit-food\"]],\n  decls: 30,\n  vars: 7,\n  consts: [[1, \"container\"], [3, \"formGroup\"], [1, \"card\", \"mb-3\", 2, \"max-width\", \"100%\"], [1, \"row\", \"g-0\"], [1, \"col-md-4\"], [1, \"img-fluid\", \"rounded-start\", 3, \"src\", \"alt\"], [1, \"col-md-8\"], [1, \"card-body\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"name\", \"id\", \"name\", \"formControlName\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"value\"], [\"for\", \"description\"], [\"type\", \"description\", \"id\", \"description\", \"formControlName\", \"description\", \"required\", \"\", 1, \"form-control\", 3, \"value\"], [\"for\", \"price\"], [\"formControlName\", \"price\", \"type\", \"number\", \"id\", \"price\", \"name\", \"price\", \"required\", \"\", 1, \"form-control\", 2, \"max-width\", \"30%\", 3, \"value\"], [\"for\", \"preperationTime\"], [\"formControlName\", \"preperationTime\", \"type\", \"number\", \"id\", \"preperationTime\", \"name\", \"preperationTime\", 1, \"form-control\", 2, \"max-width\", \"30%\", 3, \"value\"], [\"type\", \"submit\", 1, \"btn\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"delete-button\"]],\n  template: function EditFoodComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n      i0.ɵɵelement(5, \"img\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 6)(7, \"div\", 7)(8, \"div\", 8)(9, \"label\", 9);\n      i0.ɵɵtext(10, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 8)(13, \"label\", 11);\n      i0.ɵɵtext(14, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"textarea\", 12);\n      i0.ɵɵtext(16, \"\\n                        \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 8)(18, \"label\", 13);\n      i0.ɵɵtext(19, \"Price\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 8)(22, \"label\", 15);\n      i0.ɵɵtext(23, \"Preperation Time\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"br\");\n      i0.ɵɵelementStart(26, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function EditFoodComponent_Template_button_click_26_listener() {\n        return ctx.saveChanges();\n      });\n      i0.ɵɵtext(27, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"button\", 18);\n      i0.ɵɵtext(29, \"Delete Food\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"src\", ctx.food.imageUrl, i0.ɵɵsanitizeUrl)(\"alt\", ctx.food.name);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"value\", ctx.food.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"value\", ctx.food.description);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"value\", ctx.food.price);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"value\", ctx.food.preperationTime);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"button[_ngcontent-%COMP%] {\\n  background-color: #b1b2ff;\\n  color: white;\\n  margin: 0 0.5rem;\\n}\\n\\n  button[_ngcontent-%COMP%]:hover {\\n    color: #b1b2ff;\\n    background-color: white;\\n    border: 1px solid #b1b2ff;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZWRpdC1mb29kL2VkaXQtZm9vZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixnQkFBZ0I7QUFDbEI7O0VBRUU7SUFDRSxjQUFjO0lBQ2QsdUJBQXVCO0lBQ3ZCLHlCQUF5QjtFQUMzQiIsInNvdXJjZXNDb250ZW50IjpbImJ1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNiMWIyZmY7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgbWFyZ2luOiAwIDAuNXJlbTtcbn1cblxuICBidXR0b246aG92ZXIge1xuICAgIGNvbG9yOiAjYjFiMmZmO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNiMWIyZmY7XG4gIH1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","EditFoodComponent","constructor","route","router","authService","foodService","orderService","fb","foodId","findFood","id","subscribe","food","err","handleError","console","log","status","alert","navigate","JSON","parse","error","message","statusText","ngOnInit","form","formBuilder","group","name","required","description","price","preperationTime","paramMap","p","get","saveChanges","dto","value","imageUrl","Number","editFood","body","_","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/edit-food/edit-food.component.ts","/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/edit-food/edit-food.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FoodService, OrderService } from '../api/services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FoodRm, OrderDto, FoodDto } from '../api/models';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { AuthService } from '../auth/auth.service';\n\n\n@Component({\n  selector: 'app-edit-food',\n  templateUrl: './edit-food.component.html',\n  styleUrls: ['./edit-food.component.css']\n})\nexport class EditFoodComponent {\n\n  foodId: string = 'not loaded';\n  food: FoodRm = {};\n\n  form: FormGroup;\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService,\n    private foodService: FoodService,\n    private orderService: OrderService,\n    private fb: FormBuilder) { }\n\n\n   \n\n  ngOnInit(): void {\n\n    this.form = this.formBuilder.group({\n      name: [this.food.name, Validators.required],\n      description: [this.food.description, Validators.required],\n      price: [this.food.price, Validators.required],\n      preperationTime: [this.food.preperationTime]\n    });\n\n    this.route.paramMap\n      .subscribe(p => this.findFood(p.get(\"foodId\")))\n  }\n\n  saveChanges() {\n\n    console.log(this.form);\n\n    let dto = {\n      description: this.form.value.description,\n      id: this.foodId,\n      imageUrl: this.food.imageUrl,\n      name: this.form.value.name,\n      preperationTime: Number(this.form.value.preperationTime),\n      price: Number(this.form.value.price)\n    }\n\n    this.foodService.editFood({ id: this.foodId, body: dto })\n      .subscribe(_ => {},\n        err => this.handleError(err));\n\n    this.router.navigate(['/menu'])\n  }\n\n\n\n  private findFood = (foodId: string | null) => {\n    this.foodId = foodId ?? 'not passed';\n\n    this.foodService.findFood({ id: this.foodId })\n      .subscribe(\n        food => this.food = food,\n        err => this.handleError(err)\n      );\n\n    console.log(this.foodId)\n  }\n\n  private handleError = (err: any) => {\n\n    if (err.status == 404) {\n      alert(\"Food not found!\")\n      this.router.navigate(['/menu'])\n    }\n\n\n    if (err.status == 409) {\n      console.log(\"err: \" + err);\n      alert(JSON.parse(err.error).message)\n    }\n\n    console.log(\"Response Error. Status: \", err.status)\n    console.log(\"Response Error. Status Text: \", err.statusText)\n    console.log(err)\n  }\n\n}\n","<div class=\"container\">\n    <form [formGroup]=\"form\">\n        <div class=\"card mb-3\" style=\"max-width: 100%;\">\n            <div class=\"row g-0\">\n                <div class=\"col-md-4\">\n                    <img [src]=\"food.imageUrl\" class=\"img-fluid rounded-start\" [alt]=\"food.name\">\n                </div>\n\n                <div class=\"col-md-8\">\n                    \n                    <div class=\"card-body\">\n                        <!--name-->\n                        <div class=\"form-group\">\n                            <label for=\"name\">Name</label>\n                            <input\n                                   type=\"name\"\n                                   class=\"form-control\"\n                                   id=\"name\"\n                                   [value]=\"food.name\"\n                                   formControlName=\"name\"\n                       required>\n                        </div>\n                        <!--description-->\n                        <div class=\"form-group\">\n                            <label for=\"description\">Description</label>\n                            <textarea\n                                      type=\"description\"\n                                      class=\"form-control\"\n                                      id=\"description\"\n                                      [value]=\"food.description\"\n                                      formControlName=\"description\"\n                                      required>\n\n                        </textarea>\n                        </div>\n                        <!--price-->\n                        <div class=\"form-group\">\n                            <label for=\"price\">Price</label>\n                            <input formControlName=\"price\"\n                                   type=\"number\" class=\"form-control\"\n                                   id=\"price\" name=\"price\"\n                                   style=\"max-width: 30%;\"\n                                   [value]=\"food.price\"\n                       required/>\n                        </div>\n                        <!--preperationTime-->\n                        <div class=\"form-group\">\n                            <label for=\"preperationTime\">Preperation Time</label>\n                            <input formControlName=\"preperationTime\"\n                                   type=\"number\" class=\"form-control\"\n                                   id=\"preperationTime\" name=\"preperationTime\"\n                                   style=\"max-width: 30%;\"\n                                   [value]=\"food.preperationTime\"\n                                   />\n                        </div>\n                        <!--submit button-->\n                        <br />\n                        <button (click)=\"saveChanges()\" type=\"submit\" class=\"btn\" >Submit</button>\n                        <!--remove button-->\n                        <button type=\"button\" class=\"btn delete-button\">Delete Food</button>\n                    </div>\n\n                    \n                </div>\n            </div>\n        </div>\n    </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}