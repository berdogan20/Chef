{"ast":null,"code":"import { forkJoin } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./../auth/auth.service\";\nimport * as i3 from \"../api/services\";\nimport * as i4 from \"@angular/common\";\nfunction OrderDetailAdminComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5)(2, \"div\", 6);\n    i0.ɵɵelement(3, \"img\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 8)(5, \"div\", 9)(6, \"h5\", 10);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\", 11);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\", 11);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelement(12, \"br\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const orderItem_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"src\", ctx_r0.foods[i_r2] == null ? null : ctx_r0.foods[i_r2].imageUrl, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r0.foods[i_r2] == null ? null : ctx_r0.foods[i_r2].name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.foods[i_r2] == null ? null : ctx_r0.foods[i_r2].name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Price: $ \", ctx_r0.foods[i_r2] == null ? null : ctx_r0.foods[i_r2].price, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Amount: \", orderItem_r1.amount, \" \");\n  }\n}\nexport class OrderDetailAdminComponent {\n  constructor(route, router, authService, foodService, orderService) {\n    this.route = route;\n    this.router = router;\n    this.authService = authService;\n    this.foodService = foodService;\n    this.orderService = orderService;\n    this.orderId = 'not loaded';\n    this.order = {};\n    this.orderItems = [];\n    this.foods = [];\n    this.subscriptions = [];\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const orderId = params.get(\"orderId\");\n      this.findOrder(orderId);\n      console.log(\"OrderId: \" + this.orderId);\n    }, err => this.handleError(\"order-detail 34 \" + err));\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n  findOrder(orderId) {\n    if (!orderId) {\n      console.error(\"orderId is null or undefined.\");\n      return;\n    }\n    this.orderId = orderId;\n    const getOrderSubscription = this.orderService.getOrderByOrderIdOrder({\n      orderId\n    }).subscribe(order => {\n      this.order = order;\n      console.log(\"Order: \");\n      console.log(this.order);\n      this.loadOrderItemsAndFoods(order);\n    }, err => this.handleError(\"order-detail 55 \" + err));\n    this.subscriptions.push(getOrderSubscription);\n  }\n  loadOrderItemsAndFoods(order) {\n    if (!order || !order.orderId) {\n      console.error(\"Invalid order or orderId.\");\n      return;\n    }\n    const getOrderItemsSubscription = this.orderService.getOrderItemsOrder({\n      orderId: order.orderId\n    }).subscribe(orderItems => {\n      this.orderItems = orderItems;\n      console.log(\"Order items: \");\n      console.log(orderItems);\n      const foodObservables = orderItems.map(orderItem => this.foodService.findFood({\n        id: orderItem.foodItemId\n      }));\n      const forkJoinSubscription = forkJoin(foodObservables).subscribe(foods => {\n        this.foods = foods;\n        console.log(\"Hello\");\n        console.log(foods);\n      }, err => this.handleError(\"order-detail 83 \" + err));\n      this.subscriptions.push(getOrderItemsSubscription, forkJoinSubscription);\n    }, err => this.handleError(\"order-detail 89 \" + err));\n  }\n  handleError(err) {\n    if (err.status == 404) {\n      alert(\"Order not found!\");\n      this.router.navigate(['/orders']);\n    }\n    if (err.status == 409) {\n      console.error(\"Error: \", err);\n      alert(JSON.parse(err.error).message);\n    }\n    console.log(\"Response Error. Status: \", err.status);\n    console.log(\"Response Error. Status Text: \", err.statusText);\n    console.error(err);\n  }\n}\nOrderDetailAdminComponent.ɵfac = function OrderDetailAdminComponent_Factory(t) {\n  return new (t || OrderDetailAdminComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.FoodService), i0.ɵɵdirectiveInject(i3.OrderService));\n};\nOrderDetailAdminComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OrderDetailAdminComponent,\n  selectors: [[\"app-order-detail-admin\"]],\n  decls: 17,\n  vars: 7,\n  consts: [[1, \"container\"], [1, \"card\", \"mb-3\", 2, \"max-width\", \"100%\"], [4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [2, \"margin\", \"2rem\"], [1, \"row\", \"g-0\"], [1, \"col-md-4\"], [1, \"img-fluid\", \"rounded-start\", 3, \"src\", \"alt\"], [1, \"col-md-8\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"]],\n  template: function OrderDetailAdminComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, OrderDetailAdminComponent_div_2_Template, 13, 5, \"div\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"p\")(5, \"b\");\n      i0.ɵɵtext(6, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"p\")(10, \"b\");\n      i0.ɵɵtext(11, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"h4\", 4)(14, \"b\");\n      i0.ɵɵtext(15, \"Total Payment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(16);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.orderItems);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\" : \", i0.ɵɵpipeBind2(8, 4, ctx.order.orderDate, \"medium\"), \"\");\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\" : \", ctx.order.address, \"\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\": \", ctx.order.totalPayment, \" \");\n    }\n  },\n  dependencies: [i4.NgForOf, i4.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["forkJoin","i0","OrderDetailAdminComponent","constructor","route","router","authService","foodService","orderService","ngOnInit","paramMap","subscribe","params","orderId","get","findOrder","console","log","err","handleError","ngOnDestroy","subscriptions","forEach","sub","unsubscribe","error","getOrderSubscription","getOrderByOrderIdOrder","order","loadOrderItemsAndFoods","push","getOrderItemsSubscription","getOrderItemsOrder","orderItems","foodObservables","map","orderItem","findFood","id","foodItemId","forkJoinSubscription","foods","status","alert","navigate","JSON","parse","message","statusText","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/order-detail-admin/order-detail-admin.component.ts","/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/order-detail-admin/order-detail-admin.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { OrderRm, FoodRm, OrderItem, OrderDto } from '../api/models';\nimport { FoodService, OrderService } from '../api/services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from './../auth/auth.service';\nimport { forkJoin, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-order-detail-admin',\n  templateUrl: './order-detail-admin.component.html',\n  styleUrls: ['./order-detail-admin.component.css']\n})\nexport class OrderDetailAdminComponent implements OnInit, OnDestroy {\n\n  orderId: string = 'not loaded';\n  order: OrderRm = {};\n  orderItems: OrderItem[] = [];\n  foods: FoodRm[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService,\n    private foodService: FoodService,\n    private orderService: OrderService\n  ) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      const orderId = params.get(\"orderId\");\n      this.findOrder(orderId);\n      console.log(\"OrderId: \" + this.orderId);\n    },\n      err => this.handleError(\"order-detail 34 \" + err));\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private findOrder(orderId: string | null): void {\n    if (!orderId) {\n      console.error(\"orderId is null or undefined.\");\n      return;\n    }\n\n    this.orderId = orderId;\n\n    const getOrderSubscription = this.orderService.getOrderByOrderIdOrder({ orderId }).subscribe(\n      order => {\n        this.order = order;\n        console.log(\"Order: \");\n        console.log(this.order);\n        this.loadOrderItemsAndFoods(order);\n      }, err => this.handleError(\"order-detail 55 \" + err)\n    );\n\n    this.subscriptions.push(getOrderSubscription);\n  }\n\n  private loadOrderItemsAndFoods(order: OrderRm): void {\n    if (!order || !order.orderId) {\n      console.error(\"Invalid order or orderId.\");\n      return;\n    }\n\n    const getOrderItemsSubscription = this.orderService.getOrderItemsOrder({ orderId: order.orderId }).subscribe(\n      orderItems => {\n        this.orderItems = orderItems;\n        console.log(\"Order items: \");\n        console.log(orderItems);\n        const foodObservables = orderItems.map(orderItem =>\n          this.foodService.findFood({ id: orderItem.foodItemId! })\n        );\n\n        const forkJoinSubscription = forkJoin(foodObservables).subscribe(\n          foods => {\n            this.foods = foods;\n            console.log(\"Hello\");\n            console.log(foods);\n          },\n          err => this.handleError(\"order-detail 83 \" + err)\n        );\n\n        this.subscriptions.push(getOrderItemsSubscription, forkJoinSubscription);\n      },\n      err => this.handleError(\"order-detail 89 \" + err)\n    );\n  }\n\n  private handleError(err: any): void {\n    if (err.status == 404) {\n      alert(\"Order not found!\");\n      this.router.navigate(['/orders']);\n    }\n\n    if (err.status == 409) {\n      console.error(\"Error: \", err);\n      alert(JSON.parse(err.error).message);\n    }\n\n    console.log(\"Response Error. Status: \", err.status);\n    console.log(\"Response Error. Status Text: \", err.statusText);\n    console.error(err);\n  }\n}\n","<div class=\"container\">\n\n    <div class=\"card mb-3\" style=\"max-width: 100%;\">\n        <div *ngFor=\"let orderItem of orderItems; let i = index\">\n            <div class=\"row g-0\">\n\n                <div class=\"col-md-4\">\n                    <img [src]=\"foods[i]?.imageUrl\" class=\"img-fluid rounded-start\" [alt]=\"foods[i]?.name\">\n                </div>\n\n                <div class=\"col-md-8\">\n                    <div class=\"card-body\">\n                        <h5 class=\"card-title\"> {{ foods[i]?.name }} </h5>\n                        <p class=\"card-text\"> Price: $ {{ foods[i]?.price }} </p>\n                        <p class=\"card-text\"> Amount:  {{ orderItem.amount }} </p>\n                    </div>\n                </div>\n            </div>\n            <br />\n        </div>\n        <div class=\"row\">\n            <p> <b>Address</b> : {{ order.orderDate | date:'medium' }}</p>\n            <p> <b>Address</b> : {{ order.address }}</p>\n            <h4 style=\"margin:2rem\">\n                <b>Total Payment</b>: {{ order.totalPayment }}\n            </h4>\n        </div>\n\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}