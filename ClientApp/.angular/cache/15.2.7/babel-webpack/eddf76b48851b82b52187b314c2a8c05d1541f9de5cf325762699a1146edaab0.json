{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../api/services\";\nimport * as i3 from \"@angular/forms\";\nexport class BuyFoodComponent {\n  constructor(route, foodService) {\n    this.route = route;\n    this.foodService = foodService;\n    this.foodId = 'not loaded';\n    this.food = {};\n    this.findFood = foodId => {\n      this.foodId = foodId ?? 'not passed';\n      this.foodService.findFood({\n        id: this.foodId\n      }).subscribe(food => this.food = food, this.handleError);\n      console.log(this.foodId);\n    };\n    this.handleError = err => {\n      if (err.status == 404) {\n        alert(\"Food not found!\");\n        //this.router.navigate(['/search-flights'])\n      }\n\n      if (err.status == 409) {\n        console.log(\"err: \" + err);\n        alert(JSON.parse(err.error).message);\n      }\n      console.log(\"Response Error. Status: \", err.status);\n      console.log(\"Response Error. Status Text: \", err.statusText);\n      console.log(err);\n    };\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(p => this.findFood(p.get(\"foodId\")));\n  }\n}\nBuyFoodComponent.ɵfac = function BuyFoodComponent_Factory(t) {\n  return new (t || BuyFoodComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FoodService));\n};\nBuyFoodComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BuyFoodComponent,\n  selectors: [[\"app-buy-food\"]],\n  decls: 20,\n  vars: 7,\n  consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"card\", \"mb-3\", 2, \"max-width\", \"100%\"], [1, \"row\", \"g-0\"], [1, \"col-md-4\"], [1, \"img-fluid\", \"rounded-start\", 3, \"src\", \"alt\"], [1, \"col-md-8\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [\"formControlName\", \"number\", \"type\", \"number\", \"id\", \"numberOfSeats\", \"name\", \"numberOfSeats\", \"placeholder\", \"Number of Seats\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"fas\", \"fa-ticket\"]],\n  template: function BuyFoodComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function BuyFoodComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.buy();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n      i0.ɵɵelement(5, \"img\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 6)(7, \"div\", 7)(8, \"h5\", 8);\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"p\", 9);\n      i0.ɵɵtext(11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"p\", 9);\n      i0.ɵɵtext(13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"p\", 9);\n      i0.ɵɵtext(15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(16, \"input\", 10);\n      i0.ɵɵelementStart(17, \"button\", 11);\n      i0.ɵɵelement(18, \"i\", 12);\n      i0.ɵɵtext(19, \" Book \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"src\", ctx.food.imageUrl, i0.ɵɵsanitizeUrl)(\"alt\", ctx.food.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\" \", ctx.food.name, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.food.description, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" It will be preperad in \", ctx.food.preperationTime, \" minutes \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" $ \", ctx.food.price, \" \");\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAWA,OAAM,MAAOA,gBAAgB;EAK3BC,YAAoBC,KAAqB,EAC/BC,WAAwB;IADd,UAAK,GAALD,KAAK;IACf,gBAAW,GAAXC,WAAW;IAJrB,WAAM,GAAW,YAAY;IAC7B,SAAI,GAAW,EAAE;IAUT,aAAQ,GAAIC,MAAqB,IAAI;MAC3C,IAAI,CAACA,MAAM,GAAGA,MAAM,IAAI,YAAY;MAEpC,IAAI,CAACD,WAAW,CAACE,QAAQ,CAAC;QAAEC,EAAE,EAAE,IAAI,CAACF;MAAM,CAAE,CAAC,CAC3CG,SAAS,CAACC,IAAI,IAAI,IAAI,CAACA,IAAI,GAAGA,IAAI,EACjC,IAAI,CAACC,WAAW,CAAC;MAErBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,MAAM,CAAC;IACzB,CAAC;IAEM,gBAAW,GAAIQ,GAAQ,IAAI;MAEjC,IAAIA,GAAG,CAACC,MAAM,IAAI,GAAG,EAAE;QACrBC,KAAK,CAAC,iBAAiB,CAAC;QACxB;;;MAIF,IAAIF,GAAG,CAACC,MAAM,IAAI,GAAG,EAAE;QACrBH,OAAO,CAACC,GAAG,CAAC,OAAO,GAAGC,GAAG,CAAC;QAC1BE,KAAK,CAACC,IAAI,CAACC,KAAK,CAACJ,GAAG,CAACK,KAAK,CAAC,CAACC,OAAO,CAAC;;MAGtCR,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEC,GAAG,CAACC,MAAM,CAAC;MACnDH,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEC,GAAG,CAACO,UAAU,CAAC;MAC5DT,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;IAClB,CAAC;EAjCqC;EAEtCQ,QAAQ;IACN,IAAI,CAAClB,KAAK,CAACmB,QAAQ,CAChBd,SAAS,CAACe,CAAC,IAAI,IAAI,CAACjB,QAAQ,CAACiB,CAAC,CAACC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;EACnD;;AAXWvB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX7BC,8BAAuB;MAEMA;QAAA,OAAYC,SAAK;MAAA,EAAC;MAEvCD,8BAAgD;MAIpCA,yBAA6E;MACjFA,iBAAM;MAENA,8BAAsB;MAEUA,YAAgB;MAAAA,iBAAK;MAC7CA,6BAAqB;MAACA,aAAuB;MAAAA,iBAAI;MACjDA,6BAAqB;MAACA,aAA0D;MAAAA,iBAAI;MACpFA,6BAAqB;MAAEA,aAAmB;MAAAA,iBAAI;MAGlDA,6BACuC;MACvCA,mCAA8C;MAC1CA,yBAA6B;MAC7BA,uBACJ;MAAAA,iBAAS;;;MAtBnBA,eAAkB;MAAlBA,oCAAkB;MAMHA,eAAqB;MAArBA,yDAAqB;MAKEA,eAAgB;MAAhBA,8CAAgB;MAClBA,eAAuB;MAAvBA,qDAAuB;MACvBA,eAA0D;MAA1DA,wFAA0D;MACzDA,eAAmB;MAAnBA,iDAAmB","names":["BuyFoodComponent","constructor","route","foodService","foodId","findFood","id","subscribe","food","handleError","console","log","err","status","alert","JSON","parse","error","message","statusText","ngOnInit","paramMap","p","get","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/buy-food/buy-food.component.ts","/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/buy-food/buy-food.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FoodService } from '../api/services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FoodRm } from '../api/models';\n\n\n@Component({\n  selector: 'app-buy-food',\n  templateUrl: './buy-food.component.html',\n  styleUrls: ['./buy-food.component.css']\n})\nexport class BuyFoodComponent implements OnInit {\n\n  foodId: string = 'not loaded';\n  food: FoodRm = {};\n\n  constructor(private route: ActivatedRoute,\n    private foodService: FoodService) { }\n\n  ngOnInit(): void {\n    this.route.paramMap\n      .subscribe(p => this.findFood(p.get(\"foodId\")))\n  }\n\n  private findFood = (foodId: string | null) => {\n    this.foodId = foodId ?? 'not passed';\n\n    this.foodService.findFood({ id: this.foodId })\n      .subscribe(food => this.food = food,\n        this.handleError)\n\n    console.log(this.foodId)\n   }\n\n  private handleError = (err: any) => {\n\n    if (err.status == 404) {\n      alert(\"Food not found!\")\n      //this.router.navigate(['/search-flights'])\n    }\n\n\n    if (err.status == 409) {\n      console.log(\"err: \" + err);\n      alert(JSON.parse(err.error).message)\n    }\n\n    console.log(\"Response Error. Status: \", err.status)\n    console.log(\"Response Error. Status Text: \", err.statusText)\n    console.log(err)\n  }\n\n}\n","<div class=\"container\">\n\n    <form [formGroup]=\"form\" (ngSubmit)=\"buy()\">\n\n        <div class=\"card mb-3\" style=\"max-width: 100%;\">\n            <div class=\"row g-0\">\n\n                <div class=\"col-md-4\">\n                    <img [src]=\"food.imageUrl\" class=\"img-fluid rounded-start\" [alt]=\"food.name\">\n                </div>\n\n                <div class=\"col-md-8\">\n                    <div class=\"card-body\">\n                        <h5 class=\"card-title\"> {{ food.name }} </h5>\n                        <p class=\"card-text\"> {{ food.description }} </p>\n                        <p class=\"card-text\"> It will be preperad in {{ food.preperationTime }} minutes </p>\n                        <p class=\"card-text\">  $ {{ food.price }} </p>\n                    </div>\n\n                    <input formControlName=\"number\" type=\"number\" class=\"form-control\" id=\"numberOfSeats\" name=\"numberOfSeats\"\n                           placeholder=\"Number of Seats\" />\n                    <button type=\"submit\" class=\"btn btn-primary\">\n                        <i class=\"fas fa-ticket\"></i>\n                        Book\n                    </button>\n\n                </div>\n\n            </div>\n        </div>\n\n    </form>\n\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}