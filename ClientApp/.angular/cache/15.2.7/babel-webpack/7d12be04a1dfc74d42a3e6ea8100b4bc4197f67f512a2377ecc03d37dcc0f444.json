{"ast":null,"code":"/* tslint:disable */\n/* eslint-disable */\nimport { HttpResponse } from '@angular/common/http';\nimport { filter, map } from 'rxjs/operators';\nimport { RequestBuilder } from '../../request-builder';\nexport function convertBasketItemsToOrderItemsOrder(http, rootUrl, params, context) {\n  const rb = new RequestBuilder(rootUrl, convertBasketItemsToOrderItemsOrder.PATH, 'post');\n  if (params) {\n    rb.query('email', params.email, {});\n    rb.body(params.body, 'application/*+json');\n  }\n  return http.request(rb.build({\n    responseType: 'text',\n    accept: '*/*',\n    context\n  })).pipe(filter(r => r instanceof HttpResponse), map(r => {\n    return r.clone({\n      body: undefined\n    });\n  }));\n}\nconvertBasketItemsToOrderItemsOrder.PATH = '/Order/convert';","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAAkCA,YAAY,QAAQ,sBAAsB;AAE5E,SAASC,MAAM,EAAEC,GAAG,QAAQ,gBAAgB;AAE5C,SAASC,cAAc,QAAQ,uBAAuB;AAStD,OAAM,SAAUC,mCAAmC,CAACC,IAAgB,EAAEC,OAAe,EAAEC,MAAmD,EAAEC,OAAqB;EAC/J,MAAMC,EAAE,GAAG,IAAIN,cAAc,CAACG,OAAO,EAAEF,mCAAmC,CAACM,IAAI,EAAE,MAAM,CAAC;EACxF,IAAIH,MAAM,EAAE;IACVE,EAAE,CAACE,KAAK,CAAC,OAAO,EAAEJ,MAAM,CAACK,KAAK,EAAE,EAAE,CAAC;IACnCH,EAAE,CAACI,IAAI,CAACN,MAAM,CAACM,IAAI,EAAE,oBAAoB,CAAC;;EAG5C,OAAOR,IAAI,CAACS,OAAO,CACjBL,EAAE,CAACM,KAAK,CAAC;IAAEC,YAAY,EAAE,MAAM;IAAEC,MAAM,EAAE,KAAK;IAAET;EAAO,CAAE,CAAC,CAC3D,CAACU,IAAI,CACJjB,MAAM,CAAEkB,CAAM,IAA6BA,CAAC,YAAYnB,YAAY,CAAC,EACrEE,GAAG,CAAEiB,CAAoB,IAAI;IAC3B,OAAQA,CAAuB,CAACC,KAAK,CAAC;MAAEP,IAAI,EAAEQ;IAAS,CAAE,CAA6B;EACxF,CAAC,CAAC,CACH;AACH;AAEAjB,mCAAmC,CAACM,IAAI,GAAG,gBAAgB","names":["HttpResponse","filter","map","RequestBuilder","convertBasketItemsToOrderItemsOrder","http","rootUrl","params","context","rb","PATH","query","email","body","request","build","responseType","accept","pipe","r","clone","undefined"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/api/fn/order/convert-basket-items-to-order-items-order.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\nimport { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\nimport { OrderDto } from '../../models/order-dto';\n\nexport interface ConvertBasketItemsToOrderItemsOrder$Params {\n  email?: string;\n      body?: OrderDto\n}\n\nexport function convertBasketItemsToOrderItemsOrder(http: HttpClient, rootUrl: string, params?: ConvertBasketItemsToOrderItemsOrder$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {\n  const rb = new RequestBuilder(rootUrl, convertBasketItemsToOrderItemsOrder.PATH, 'post');\n  if (params) {\n    rb.query('email', params.email, {});\n    rb.body(params.body, 'application/*+json');\n  }\n\n  return http.request(\n    rb.build({ responseType: 'text', accept: '*/*', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),\n    map((r: HttpResponse<any>) => {\n      return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n    })\n  );\n}\n\nconvertBasketItemsToOrderItemsOrder.PATH = '/Order/convert';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}