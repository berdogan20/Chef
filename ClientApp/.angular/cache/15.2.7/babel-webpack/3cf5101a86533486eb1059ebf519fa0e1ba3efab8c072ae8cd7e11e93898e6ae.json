{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../auth/auth.service\";\nimport * as i3 from \"../api/services\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nfunction BuyFoodComponent_div_25_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" How many servings do you want? \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BuyFoodComponent_div_25_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" You can not buy less than 1 serving! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BuyFoodComponent_div_25_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Our stocks do not have more than 10 servings. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BuyFoodComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, BuyFoodComponent_div_25_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵtemplate(2, BuyFoodComponent_div_25_div_2_Template, 2, 0, \"div\", 16);\n    i0.ɵɵtemplate(3, BuyFoodComponent_div_25_div_3_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.number.errors == null ? null : ctx_r0.number.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.number.errors == null ? null : ctx_r0.number.errors[\"min\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.number.errors == null ? null : ctx_r0.number.errors[\"max\"]);\n  }\n}\nexport class BuyFoodComponent {\n  constructor(route, router, authService, foodService, orderService, userService, categoryService, fb, basketItemService) {\n    this.route = route;\n    this.router = router;\n    this.authService = authService;\n    this.foodService = foodService;\n    this.orderService = orderService;\n    this.userService = userService;\n    this.categoryService = categoryService;\n    this.fb = fb;\n    this.basketItemService = basketItemService;\n    this.foodId = 'not loaded';\n    this.food = {};\n    this.category = \"\";\n    this.form = this.fb.group({\n      number: [1, Validators.compose([Validators.required, Validators.min(1), Validators.max(10)])]\n    });\n    this.findFood = foodId => {\n      this.foodId = foodId ?? 'not passed';\n      this.foodService.findFood({\n        id: this.foodId\n      }).subscribe(food => {\n        this.food = food;\n        this.getCategory(this.food.categoryId);\n      }, err => this.handleError(err));\n    };\n    this.handleError = err => {\n      if (err.status == 404) {\n        alert(\"Food not found!\");\n        this.router.navigate(['/menu']);\n      }\n      if (err.status == 409) {\n        console.log(\"err: \" + err);\n        alert(JSON.parse(err.error).message);\n      }\n      console.log(\"Response Error. Status: \", err.status);\n      console.log(\"Response Error. Status Text: \", err.statusText);\n      console.log(err);\n    };\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(p => this.findFood(p.get(\"foodId\")));\n  }\n  addToBasket() {\n    if (this.form.invalid) return;\n    const basketItem = {\n      amount: this.form.get('number')?.value,\n      basketItemId: uuidv4(),\n      email: this.authService.currentUser?.email,\n      foodId: this.food.id,\n      price: this.food.price\n    };\n    console.log(basketItem);\n    this.basketItemService.addBasketItemBasketItem({\n      body: basketItem\n    }).subscribe(_ => {\n      this.router.navigate(['/basket']);\n    }, err => this.handleError(err));\n  }\n  get number() {\n    return this.form.controls.number;\n  }\n  getCategory(id) {\n    this.categoryService.findCategory({\n      id: id\n    }).subscribe(rm => this.category = rm.name, err => this.handleError(err));\n  }\n}\nBuyFoodComponent.ɵfac = function BuyFoodComponent_Factory(t) {\n  return new (t || BuyFoodComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.FoodService), i0.ɵɵdirectiveInject(i3.OrderService), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i3.CategoryService), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i3.BasketItemService));\n};\nBuyFoodComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BuyFoodComponent,\n  selectors: [[\"app-buy-food\"]],\n  decls: 26,\n  vars: 9,\n  consts: [[1, \"container\"], [1, \"card\", \"mb-3\", 2, \"max-width\", \"100%\"], [1, \"row\", \"g-0\"], [1, \"col-md-4\"], [1, \"img-fluid\", \"rounded-start\", 3, \"src\", \"alt\"], [1, \"col-md-8\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"numberOfOrders\", 1, \"form-label\", \"mt-5\"], [\"formControlName\", \"number\", \"type\", \"number\", \"id\", \"numberOfOrders\", \"name\", \"numberOfOrders\", \"placeholder\", \"Number of Orders\", 1, \"form-control\", 2, \"max-width\", \"30%\"], [\"type\", \"submit\", 1, \"btn\", 2, \"width\", \"30%\"], [1, \"fas\", \"fa-food\"], [\"class\", \"invalid-feedback d-block\", 4, \"ngIf\"], [1, \"invalid-feedback\", \"d-block\"], [4, \"ngIf\"]],\n  template: function BuyFoodComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵelement(4, \"img\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 5)(6, \"div\", 6)(7, \"h4\", 7);\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"h5\", 7);\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"p\", 8);\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"p\", 8);\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"p\", 8);\n      i0.ɵɵtext(16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 6)(18, \"form\", 9);\n      i0.ɵɵlistener(\"ngSubmit\", function BuyFoodComponent_Template_form_ngSubmit_18_listener() {\n        return ctx.addToBasket();\n      });\n      i0.ɵɵelementStart(19, \"label\", 10);\n      i0.ɵɵtext(20, \"Number of Orders\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 11);\n      i0.ɵɵelementStart(22, \"button\", 12);\n      i0.ɵɵelement(23, \"i\", 13);\n      i0.ɵɵtext(24, \" Add to basket \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(25, BuyFoodComponent_div_25_Template, 4, 3, \"div\", 14);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"src\", ctx.food.imageUrl, i0.ɵɵsanitizeUrl)(\"alt\", ctx.food.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\" \", ctx.category, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.food.name, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.food.description, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" It will be preperad in \", ctx.food.preperationTime, \" minutes \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" $ \", ctx.food.price, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.number.invalid && (ctx.number.dirty || ctx.number.touched));\n    }\n  },\n  dependencies: [i5.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"button[_ngcontent-%COMP%] {\\n  background-color: #b1b2ff;\\n  color: white;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n    color: #b1b2ff;\\n    background-color: white;\\n    border: 1px solid #b1b2ff;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYnV5LWZvb2QvYnV5LWZvb2QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHlCQUF5QjtFQUN6QixZQUFZO0FBQ2Q7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUJBQXVCO0lBQ3ZCLHlCQUF5QjtFQUMzQiIsInNvdXJjZXNDb250ZW50IjpbImJ1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNiMWIyZmY7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuYnV0dG9uOmhvdmVyIHtcbiAgICBjb2xvcjogI2IxYjJmZjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjYjFiMmZmO1xuICB9XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","v4","uuidv4","i0","BuyFoodComponent","constructor","route","router","authService","foodService","orderService","userService","categoryService","fb","basketItemService","group","number","compose","required","min","max","foodId","findFood","id","subscribe","food","getCategory","categoryId","err","handleError","status","alert","navigate","console","log","JSON","parse","error","message","statusText","ngOnInit","paramMap","p","get","addToBasket","form","invalid","basketItem","amount","value","basketItemId","email","currentUser","price","addBasketItemBasketItem","body","_","controls","findCategory","rm","category","name","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/buy-food/buy-food.component.ts","/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/buy-food/buy-food.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BasketItemService, CategoryService, FoodService, OrderService, UserService } from '../api/services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BasketItem, FoodRm, OrderDto, OrderItem } from '../api/models';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../auth/auth.service';\nimport { v4 as uuidv4 } from 'uuid';\n\n\n@Component({\n  selector: 'app-buy-food',\n  templateUrl: './buy-food.component.html',\n  styleUrls: ['./buy-food.component.css']\n})\nexport class BuyFoodComponent {\n\n  foodId: string = 'not loaded';\n  food: FoodRm = {};\n  category: string = \"\";\n\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService,\n    private foodService: FoodService,\n    private orderService: OrderService,\n    private userService: UserService,\n    private categoryService: CategoryService,\n    private fb: FormBuilder,\n    private basketItemService: BasketItemService) { }\n\n\n  form = this.fb.group({\n    number: [1, Validators.compose([Validators.required, Validators.min(1), Validators.max(10)])]\n  })\n\n  ngOnInit(): void {\n    this.route.paramMap\n      .subscribe(p => this.findFood(p.get(\"foodId\")))\n  }\n\n  private findFood = (foodId: string | null) => {\n    this.foodId = foodId ?? 'not passed';\n\n    this.foodService.findFood({ id: this.foodId })\n      .subscribe(\n        food => {\n          this.food = food\n          this.getCategory(this.food.categoryId!);\n        },\n        err => this.handleError(err)\n      );\n   }\n\n  private handleError = (err: any) => {\n\n    if (err.status == 404) {\n      alert(\"Food not found!\")\n      this.router.navigate(['/menu'])\n    }\n\n\n    if (err.status == 409) {\n      console.log(\"err: \" + err);\n      alert(JSON.parse(err.error).message)\n    }\n\n    console.log(\"Response Error. Status: \", err.status)\n    console.log(\"Response Error. Status Text: \", err.statusText)\n    console.log(err)\n  }\n\n  addToBasket() {\n\n    if (this.form.invalid)\n      return;\n\n    const basketItem: BasketItem = {\n      amount: this.form.get('number')?.value!,\n      basketItemId: uuidv4(),\n      email: this.authService.currentUser?.email!,\n      foodId: this.food.id,\n      price: this.food.price\n    }\n\n\n    console.log(basketItem);\n\n    this.basketItemService.addBasketItemBasketItem({ body: basketItem\n    })\n      .subscribe(_ => {\n        this.router.navigate(['/basket']);\n      },\n        err => this.handleError(err));  \n  }\n\n  get number() {\n    return this.form.controls.number\n  }\n\n  getCategory(id: number) {\n    this.categoryService.findCategory({ id: id })\n      .subscribe(rm => this.category = rm.name!,\n        err => this.handleError(err));\n  }\n}\n","<div class=\"container\">\n\n    <div class=\"card mb-3\" style=\"max-width: 100%;\">\n        <div class=\"row g-0\">\n            <div class=\"col-md-4\">\n                <img [src]=\"food.imageUrl\" class=\"img-fluid rounded-start\" [alt]=\"food.name\">\n            </div>\n\n            <div class=\"col-md-8\">\n                <div class=\"card-body\">\n                    <h4 class=\"card-title\"> {{ category }} </h4>\n                    <h5 class=\"card-title\"> {{ food.name }} </h5>\n                    <p class=\"card-text\"> {{ food.description }} </p>\n                    <p class=\"card-text\"> It will be preperad in {{ food.preperationTime }} minutes </p>\n                    <p class=\"card-text\">  $ {{ food.price }} </p>\n                </div>\n\n                <div class=\"card-body\">\n                    <form [formGroup]=\"form\" (ngSubmit)=\"addToBasket()\">\n                        <label class=\"form-label mt-5\" for=\"numberOfOrders\">Number of Orders</label>\n\n                        <input formControlName=\"number\"\n                               type=\"number\" class=\"form-control\"\n                               id=\"numberOfOrders\" name=\"numberOfOrders\"\n                               style=\"max-width: 30%;\"\n                               placeholder=\"Number of Orders\" />\n                        <button type=\"submit\" class=\"btn\"\n                                style=\"width: 30%;\">\n                            <i class=\"fas fa-food\"></i>\n                            Add to basket\n                        </button>\n                    </form>\n                    <div *ngIf=\"number.invalid && (number.dirty || number.touched)\" class=\"invalid-feedback d-block\">\n                        <div *ngIf=\"number.errors?.['required']\">\n                            How many servings do you want?\n                        </div>\n                        <div *ngIf=\"number.errors?.['min']\">\n                            You can not buy less than 1 serving!\n                        </div>\n                        <div *ngIf=\"number.errors?.['max']\">\n                            Our stocks do not have more than 10 servings.\n                        </div>\n                    </div>\n                </div>\n\n                \n\n            </div>\n\n\n            \n\n\n        </div>\n    </div>\n\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}