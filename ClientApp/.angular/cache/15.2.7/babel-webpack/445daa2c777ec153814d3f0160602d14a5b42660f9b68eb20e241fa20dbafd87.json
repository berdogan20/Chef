{"ast":null,"code":"/* tslint:disable */\n/* eslint-disable */\nimport { HttpResponse } from '@angular/common/http';\nimport { filter, map } from 'rxjs/operators';\nimport { RequestBuilder } from '../../request-builder';\nexport function getByCategoryIdFood$Plain(http, rootUrl, params, context) {\n  const rb = new RequestBuilder(rootUrl, getByCategoryIdFood$Plain.PATH, 'get');\n  if (params) {\n    rb.path('categoryId', params.categoryId, {});\n  }\n  return http.request(rb.build({\n    responseType: 'text',\n    accept: 'text/plain',\n    context\n  })).pipe(filter(r => r instanceof HttpResponse), map(r => {\n    return r;\n  }));\n}\ngetByCategoryIdFood$Plain.PATH = '/Food/byCategory/{categoryId}';","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAAkCA,YAAY,QAAQ,sBAAsB;AAE5E,SAASC,MAAM,EAAEC,GAAG,QAAQ,gBAAgB;AAE5C,SAASC,cAAc,QAAQ,uBAAuB;AAQtD,OAAM,SAAUC,yBAAyB,CAACC,IAAgB,EAAEC,OAAe,EAAEC,MAAwC,EAAEC,OAAqB;EAC1I,MAAMC,EAAE,GAAG,IAAIN,cAAc,CAACG,OAAO,EAAEF,yBAAyB,CAACM,IAAI,EAAE,KAAK,CAAC;EAC7E,IAAIH,MAAM,EAAE;IACVE,EAAE,CAACE,IAAI,CAAC,YAAY,EAAEJ,MAAM,CAACK,UAAU,EAAE,EAAE,CAAC;;EAG9C,OAAOP,IAAI,CAACQ,OAAO,CACjBJ,EAAE,CAACK,KAAK,CAAC;IAAEC,YAAY,EAAE,MAAM;IAAEC,MAAM,EAAE,YAAY;IAAER;EAAO,CAAE,CAAC,CAClE,CAACS,IAAI,CACJhB,MAAM,CAAEiB,CAAM,IAA6BA,CAAC,YAAYlB,YAAY,CAAC,EACrEE,GAAG,CAAEgB,CAAoB,IAAI;IAC3B,OAAOA,CAAsC;EAC/C,CAAC,CAAC,CACH;AACH;AAEAd,yBAAyB,CAACM,IAAI,GAAG,+BAA+B","names":["HttpResponse","filter","map","RequestBuilder","getByCategoryIdFood$Plain","http","rootUrl","params","context","rb","PATH","path","categoryId","request","build","responseType","accept","pipe","r"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/api/fn/food/get-by-category-id-food-plain.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\nimport { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\nimport { FoodRm } from '../../models/food-rm';\n\nexport interface GetByCategoryIdFood$Plain$Params {\n  categoryId: number;\n}\n\nexport function getByCategoryIdFood$Plain(http: HttpClient, rootUrl: string, params: GetByCategoryIdFood$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<FoodRm>>> {\n  const rb = new RequestBuilder(rootUrl, getByCategoryIdFood$Plain.PATH, 'get');\n  if (params) {\n    rb.path('categoryId', params.categoryId, {});\n  }\n\n  return http.request(\n    rb.build({ responseType: 'text', accept: 'text/plain', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),\n    map((r: HttpResponse<any>) => {\n      return r as StrictHttpResponse<Array<FoodRm>>;\n    })\n  );\n}\n\ngetByCategoryIdFood$Plain.PATH = '/Food/byCategory/{categoryId}';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}