{"ast":null,"code":"/* tslint:disable */\n/* eslint-disable */\nimport { HttpResponse } from '@angular/common/http';\nimport { filter, map } from 'rxjs/operators';\nimport { RequestBuilder } from '../../request-builder';\nexport function editFood$Plain(http, rootUrl, params, context) {\n  const rb = new RequestBuilder(rootUrl, editFood$Plain.PATH, 'put');\n  if (params) {\n    rb.path('id', params.id, {});\n    rb.body(params.body, 'application/*+json');\n  }\n  return http.request(rb.build({\n    responseType: 'text',\n    accept: 'text/plain',\n    context\n  })).pipe(filter(r => r instanceof HttpResponse), map(r => {\n    return r;\n  }));\n}\neditFood$Plain.PATH = '/Food/{id}';","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAAkCA,YAAY,QAAQ,sBAAsB;AAE5E,SAASC,MAAM,EAAEC,GAAG,QAAQ,gBAAgB;AAE5C,SAASC,cAAc,QAAQ,uBAAuB;AAUtD,OAAM,SAAUC,cAAc,CAACC,IAAgB,EAAEC,OAAe,EAAEC,MAA6B,EAAEC,OAAqB;EACpH,MAAMC,EAAE,GAAG,IAAIN,cAAc,CAACG,OAAO,EAAEF,cAAc,CAACM,IAAI,EAAE,KAAK,CAAC;EAClE,IAAIH,MAAM,EAAE;IACVE,EAAE,CAACE,IAAI,CAAC,IAAI,EAAEJ,MAAM,CAACK,EAAE,EAAE,EAAE,CAAC;IAC5BH,EAAE,CAACI,IAAI,CAACN,MAAM,CAACM,IAAI,EAAE,oBAAoB,CAAC;;EAG5C,OAAOR,IAAI,CAACS,OAAO,CACjBL,EAAE,CAACM,KAAK,CAAC;IAAEC,YAAY,EAAE,MAAM;IAAEC,MAAM,EAAE,YAAY;IAAET;EAAO,CAAE,CAAC,CAClE,CAACU,IAAI,CACJjB,MAAM,CAAEkB,CAAM,IAA6BA,CAAC,YAAYnB,YAAY,CAAC,EACrEE,GAAG,CAAEiB,CAAoB,IAAI;IAC3B,OAAOA,CAA+B;EACxC,CAAC,CAAC,CACH;AACH;AAEAf,cAAc,CAACM,IAAI,GAAG,YAAY","names":["HttpResponse","filter","map","RequestBuilder","editFood$Plain","http","rootUrl","params","context","rb","PATH","path","id","body","request","build","responseType","accept","pipe","r"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/api/fn/food/edit-food-plain.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\nimport { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\nimport { FoodDto } from '../../models/food-dto';\nimport { FoodRm } from '../../models/food-rm';\n\nexport interface EditFood$Plain$Params {\n  id: string;\n      body?: FoodDto\n}\n\nexport function editFood$Plain(http: HttpClient, rootUrl: string, params: EditFood$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<FoodRm>> {\n  const rb = new RequestBuilder(rootUrl, editFood$Plain.PATH, 'put');\n  if (params) {\n    rb.path('id', params.id, {});\n    rb.body(params.body, 'application/*+json');\n  }\n\n  return http.request(\n    rb.build({ responseType: 'text', accept: 'text/plain', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),\n    map((r: HttpResponse<any>) => {\n      return r as StrictHttpResponse<FoodRm>;\n    })\n  );\n}\n\neditFood$Plain.PATH = '/Food/{id}';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}