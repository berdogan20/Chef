{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./../auth/auth.service\";\nimport * as i3 from \"../api/services\";\nimport * as i4 from \"./../api/services/order.service\";\nimport * as i5 from \"@angular/common\";\nfunction MyOrdersComponent_div_1_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"Additional Details\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction MyOrdersComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵlistener(\"click\", function MyOrdersComponent_div_1_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r2 = restoredCtx.index;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.toggleCard(i_r2));\n    });\n    i0.ɵɵelementStart(1, \"div\", 3)(2, \"div\", 4)(3, \"h5\", 5);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 6)(7, \"small\", 7);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(9, MyOrdersComponent_div_1_div_9_Template, 3, 0, \"div\", 8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const order_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 3, order_r1.orderDate, \"medium\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(order_r1.status);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.expandedCardIndex === i_r2);\n  }\n}\nexport class MyOrdersComponent {\n  constructor(route, router, authService, foodService, orderService, userService) {\n    this.route = route;\n    this.router = router;\n    this.authService = authService;\n    this.foodService = foodService;\n    this.orderService = orderService;\n    this.userService = userService;\n    this.orders = [];\n    this.foods = [];\n    this.expandedCardIndex = null;\n  }\n  ngOnInit() {\n    this.searchOrders();\n  }\n  toggleCard(index) {\n    if (this.expandedCardIndex === index) {\n      // If the clicked card is already expanded, close it\n      this.expandedCardIndex = null;\n    } else {\n      // Expand the clicked card\n      this.expandedCardIndex = index;\n    }\n  }\n  searchOrders() {\n    this.orderService.listOrder({\n      email: this.authService.currentUser?.email\n    }).subscribe(l => this.orders = l, err => this.handleError(err));\n  }\n  handleError(err) {\n    console.log(\"Response Error, Status:\", err.status);\n    console.log(\"Response Error, Status Text:\", err.statusText);\n    console.log(err);\n  }\n}\nMyOrdersComponent.ɵfac = function MyOrdersComponent_Factory(t) {\n  return new (t || MyOrdersComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.FoodService), i0.ɵɵdirectiveInject(i4.OrderService), i0.ɵɵdirectiveInject(i3.UserService));\n};\nMyOrdersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MyOrdersComponent,\n  selectors: [[\"app-my-orders\"]],\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"container\"], [\"class\", \"card mb-3 col-md-4\", \"style\", \"max-width: 100%;\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\", \"mb-3\", \"col-md-4\", 2, \"max-width\", \"100%\", 3, \"click\"], [1, \"row\", \"g-0\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [1, \"text-muted\"], [4, \"ngIf\"]],\n  template: function MyOrdersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, MyOrdersComponent_div_1_Template, 10, 6, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.orders);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i5.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IASgBA,2BAAqC;IAG9BA,kCAAkB;IAAAA,iBAAI;;;;;;IAXzCA,8BAG6B;IAAxBA;MAAA;MAAA;MAAA;MAAA,OAASA,sCAAa;IAAA,EAAC;IACxBA,8BAAqB;IAEUA,YAAqC;;IAAAA,iBAAK;IACjEA,4BAAqB;IAA0BA,YAAkB;IAAAA,iBAAQ;IACzEA,wEAIM;IACVA,iBAAM;;;;;;IAPqBA,eAAqC;IAArCA,wEAAqC;IACbA,eAAkB;IAAlBA,qCAAkB;IAC3DA,eAA6B;IAA7BA,wDAA6B;;;ACKnD,OAAM,MAAOC,iBAAiB;EAO5BC,YAAoBC,KAAqB,EAC/BC,MAAc,EACdC,WAAwB,EACxBC,WAAwB,EACxBC,YAA0B,EAC1BC,WAAwB;IALd,UAAK,GAALL,KAAK;IACf,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;IACX,gBAAW,GAAXC,WAAW;IACX,iBAAY,GAAZC,YAAY;IACZ,gBAAW,GAAXC,WAAW;IAVrB,WAAM,GAAc,EAAE;IACtB,UAAK,GAAa,EAAE;IAEpB,sBAAiB,GAAkB,IAAI;EAOD;EAGtCC,QAAQ;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAGAC,UAAU,CAACC,KAAa;IACtB,IAAI,IAAI,CAACC,iBAAiB,KAAKD,KAAK,EAAE;MACpC;MACA,IAAI,CAACC,iBAAiB,GAAG,IAAI;KAC9B,MAAM;MACL;MACA,IAAI,CAACA,iBAAiB,GAAGD,KAAK;;EAElC;EAEAF,YAAY;IACV,IAAI,CAACH,YAAY,CAACO,SAAS,CAAC;MAAEC,KAAK,EAAE,IAAI,CAACV,WAAW,CAACW,WAAW,EAAED;IAAM,CAAE,CAAC,CACzEE,SAAS,CAACC,CAAC,IAAI,IAAI,CAACC,MAAM,GAAGD,CAAC,EAC7BE,GAAG,IAAI,IAAI,CAACC,WAAW,CAACD,GAAG,CAAC,CAAC;EACnC;EAIQC,WAAW,CAACD,GAAQ;IAC1BE,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEH,GAAG,CAACI,MAAM,CAAC;IAClDF,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEH,GAAG,CAACK,UAAU,CAAC;IAC3DH,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;EAClB;;AA1CWnB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDd9B9B,8BAAuB;MACnBA,mEAeM;MACVA,iBAAM;;;MAhBqBA,eAAW;MAAXA,oCAAW","names":["i0","MyOrdersComponent","constructor","route","router","authService","foodService","orderService","userService","ngOnInit","searchOrders","toggleCard","index","expandedCardIndex","listOrder","email","currentUser","subscribe","l","orders","err","handleError","console","log","status","statusText","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/my-orders/my-orders.component.html","/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/my-orders/my-orders.component.ts"],"sourcesContent":["<div class=\"container\">\n    <div *ngFor=\"let order of orders; let i = index\"\n         class=\"card mb-3 col-md-4\"\n         style=\"max-width: 100%;\"\n         (click)=\"toggleCard(i)\">\n        <div class=\"row g-0\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">{{ order.orderDate | date:'medium' }}</h5>\n                <p class=\"card-text\"><small class=\"text-muted\">{{ order.status }}</small></p>\n                <div *ngIf=\"expandedCardIndex === i\">\n                    <!-- Additional details to display when the card is expanded -->\n                    <!-- Replace this with your desired details -->\n                    <p>Additional Details</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<!--<div class=\"container\">\n\n    <div *ngFor=\"let order of orders; let i = index\"\n         class=\"card mb-3\" style=\"max-width: 100%;\">\n        <div class=\"row g-0\">\n            <div class=\"col-md-4\">\n                <img [src]=\"foods[i]?.imageUrl\" class=\"img-fluid rounded-start\" [alt]=\"foods[i]?.name\">\n            </div>\n            <div class=\"col-md-8\">\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\"> {{ foods[i]?.name }} </h5>\n                    <p class=\"card-text\">{{ foods[i]?.description }}</p>\n                    <p class=\"card-text\"> Amount: {{ order.amount }}</p>\n                    <p class=\"card-text\"><small class=\"text-muted\">{{ order.status }}</small></p>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>-->\n","import { Component, OnInit } from '@angular/core';\nimport { OrderRm, FoodRm, OrderItem, UserRm, OrderDto } from '../api/models';\nimport { CategoryService, FoodService, UserService } from '../api/services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OrderService } from './../api/services/order.service';\nimport { AuthService } from './../auth/auth.service';\nimport { forkJoin } from 'rxjs';\nimport { v4 as uuidv4 } from 'uuid';\n\n@Component({\n  selector: 'app-my-orders',\n  templateUrl: './my-orders.component.html',\n  styleUrls: ['./my-orders.component.css']\n})\nexport class MyOrdersComponent {\n\n  orders: OrderRm[] = [];\n  foods: FoodRm[] = [];\n\n  expandedCardIndex: number | null = null;\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService,\n    private foodService: FoodService,\n    private orderService: OrderService,\n    private userService: UserService) { }\n\n\n  ngOnInit(): void {\n    this.searchOrders();\n  }\n\n\n  toggleCard(index: number): void {\n    if (this.expandedCardIndex === index) {\n      // If the clicked card is already expanded, close it\n      this.expandedCardIndex = null;\n    } else {\n      // Expand the clicked card\n      this.expandedCardIndex = index;\n    }\n  }\n\n  searchOrders() {\n    this.orderService.listOrder({ email: this.authService.currentUser?.email! })\n      .subscribe(l => this.orders = l,\n        err => this.handleError(err));\n  }\n\n\n\n  private handleError(err: any) {\n    console.log(\"Response Error, Status:\", err.status);\n    console.log(\"Response Error, Status Text:\", err.statusText);\n    console.log(err);\n  }\n\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}