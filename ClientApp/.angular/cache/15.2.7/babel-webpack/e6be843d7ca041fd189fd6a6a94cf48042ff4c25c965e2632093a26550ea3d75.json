{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../api/services\";\nimport * as i3 from \"@angular/forms\";\nexport class BuyFoodComponent {\n  constructor(route, foodService, fb) {\n    this.route = route;\n    this.foodService = foodService;\n    this.fb = fb;\n    this.foodId = 'not loaded';\n    this.food = {};\n    this.form = this.fb.group({\n      number: [1, Validators.compose([Validators.required, Validators.min(1), Validators.max(30)])]\n    });\n    this.findFood = foodId => {\n      this.foodId = foodId ?? 'not passed';\n      this.foodService.findFood({\n        id: this.foodId\n      }).subscribe(food => this.food = food, this.handleError);\n      console.log(this.foodId);\n    };\n    this.handleError = err => {\n      if (err.status == 404) {\n        alert(\"Food not found!\");\n        //this.router.navigate(['/search-flights'])\n      }\n\n      if (err.status == 409) {\n        console.log(\"err: \" + err);\n        alert(JSON.parse(err.error).message);\n      }\n      console.log(\"Response Error. Status: \", err.status);\n      console.log(\"Response Error. Status Text: \", err.statusText);\n      console.log(err);\n    };\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(p => this.findFood(p.get(\"foodId\")));\n  }\n  buy() {}\n  get number() {\n    return this.form.controls.number;\n  }\n}\nBuyFoodComponent.ɵfac = function BuyFoodComponent_Factory(t) {\n  return new (t || BuyFoodComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FoodService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nBuyFoodComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BuyFoodComponent,\n  selectors: [[\"app-buy-food\"]],\n  decls: 23,\n  vars: 7,\n  consts: [[1, \"container\"], [1, \"card\", \"mb-3\", 2, \"max-width\", \"100%\"], [1, \"row\", \"g-0\"], [1, \"col-md-4\"], [1, \"img-fluid\", \"rounded-start\", 3, \"src\", \"alt\"], [1, \"col-md-8\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"numberOfOrders\", 1, \"form-label\", \"mt-5\"], [\"formControlName\", \"number\", \"type\", \"number\", \"id\", \"numberOfOrders\", \"name\", \"numberOfOrders\", \"placeholder\", \"Number of Orders\", 1, \"form-control\", 2, \"max-width\", \"30%\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"fas\", \"fa-food\"]],\n  template: function BuyFoodComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵelement(4, \"img\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 5)(6, \"div\", 6)(7, \"h5\", 7);\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"p\", 8);\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"p\", 8);\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"p\", 8);\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 6)(16, \"form\", 9);\n      i0.ɵɵlistener(\"ngSubmit\", function BuyFoodComponent_Template_form_ngSubmit_16_listener() {\n        return ctx.buy();\n      });\n      i0.ɵɵelementStart(17, \"label\", 10);\n      i0.ɵɵtext(18, \"Number of Orders\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 11);\n      i0.ɵɵelementStart(20, \"button\", 12);\n      i0.ɵɵelement(21, \"i\", 13);\n      i0.ɵɵtext(22, \" Buy \");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"src\", ctx.food.imageUrl, i0.ɵɵsanitizeUrl)(\"alt\", ctx.food.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\" \", ctx.food.name, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.food.description, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" It will be preperad in \", ctx.food.preperationTime, \" minutes \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" $ \", ctx.food.price, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAIA,SAAsBA,UAAU,QAAQ,gBAAgB;;;;;AAQxD,OAAM,MAAOC,gBAAgB;EAM3BC,YAAoBC,KAAqB,EAC/BC,WAAwB,EACxBC,EAAe;IAFL,UAAK,GAALF,KAAK;IACf,gBAAW,GAAXC,WAAW;IACX,OAAE,GAAFC,EAAE;IANZ,WAAM,GAAW,YAAY;IAC7B,SAAI,GAAW,EAAE;IAQjB,SAAI,GAAG,IAAI,CAACA,EAAE,CAACC,KAAK,CAAC;MACnBC,MAAM,EAAE,CAAC,CAAC,EAAEP,UAAU,CAACQ,OAAO,CAAC,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACU,GAAG,CAAC,CAAC,CAAC,EAAEV,UAAU,CAACW,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;KAC7F,CAAC;IAOM,aAAQ,GAAIC,MAAqB,IAAI;MAC3C,IAAI,CAACA,MAAM,GAAGA,MAAM,IAAI,YAAY;MAEpC,IAAI,CAACR,WAAW,CAACS,QAAQ,CAAC;QAAEC,EAAE,EAAE,IAAI,CAACF;MAAM,CAAE,CAAC,CAC3CG,SAAS,CAACC,IAAI,IAAI,IAAI,CAACA,IAAI,GAAGA,IAAI,EACjC,IAAI,CAACC,WAAW,CAAC;MAErBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,MAAM,CAAC;IACzB,CAAC;IAEM,gBAAW,GAAIQ,GAAQ,IAAI;MAEjC,IAAIA,GAAG,CAACC,MAAM,IAAI,GAAG,EAAE;QACrBC,KAAK,CAAC,iBAAiB,CAAC;QACxB;;;MAIF,IAAIF,GAAG,CAACC,MAAM,IAAI,GAAG,EAAE;QACrBH,OAAO,CAACC,GAAG,CAAC,OAAO,GAAGC,GAAG,CAAC;QAC1BE,KAAK,CAACC,IAAI,CAACC,KAAK,CAACJ,GAAG,CAACK,KAAK,CAAC,CAACC,OAAO,CAAC;;MAGtCR,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEC,GAAG,CAACC,MAAM,CAAC;MACnDH,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEC,GAAG,CAACO,UAAU,CAAC;MAC5DT,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;IAClB,CAAC;EAtC8B;EAO/BQ,QAAQ;IACN,IAAI,CAACzB,KAAK,CAAC0B,QAAQ,CAChBd,SAAS,CAACe,CAAC,IAAI,IAAI,CAACjB,QAAQ,CAACiB,CAAC,CAACC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;EACnD;EA8BAC,GAAG,IACH;EAEA,IAAIzB,MAAM;IACR,OAAO,IAAI,CAAC0B,IAAI,CAACC,QAAQ,CAAC3B,MAAM;EAClC;;AArDWN,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAkC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ7BC,8BAAuB;MAKPA,yBAA6E;MACjFA,iBAAM;MAENA,8BAAsB;MAEUA,YAAgB;MAAAA,iBAAK;MAC7CA,4BAAqB;MAACA,aAAuB;MAAAA,iBAAI;MACjDA,6BAAqB;MAACA,aAA0D;MAAAA,iBAAI;MACpFA,6BAAqB;MAAEA,aAAmB;MAAAA,iBAAI;MAGlDA,+BAAuB;MACMA;QAAA,OAAYC,SAAK;MAAA,EAAC;MACvCD,kCAAoD;MAAAA,iCAAgB;MAAAA,iBAAQ;MAE5EA,6BAIwC;MACxCA,mCAA8C;MAC1CA,yBAA2B;MAC3BA,sBACJ;MAAAA,iBAAS;;;MAvBZA,eAAqB;MAArBA,yDAAqB;MAKEA,eAAgB;MAAhBA,8CAAgB;MAClBA,eAAuB;MAAvBA,qDAAuB;MACvBA,eAA0D;MAA1DA,wFAA0D;MACzDA,eAAmB;MAAnBA,iDAAmB;MAIpCA,eAAkB;MAAlBA,oCAAkB","names":["Validators","BuyFoodComponent","constructor","route","foodService","fb","group","number","compose","required","min","max","foodId","findFood","id","subscribe","food","handleError","console","log","err","status","alert","JSON","parse","error","message","statusText","ngOnInit","paramMap","p","get","buy","form","controls","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/buy-food/buy-food.component.ts","/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/buy-food/buy-food.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FoodService } from '../api/services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FoodRm } from '../api/models';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-buy-food',\n  templateUrl: './buy-food.component.html',\n  styleUrls: ['./buy-food.component.css']\n})\nexport class BuyFoodComponent implements OnInit {\n\n  foodId: string = 'not loaded';\n  food: FoodRm = {};\n\n\n  constructor(private route: ActivatedRoute,\n    private foodService: FoodService,\n    private fb: FormBuilder  ) { }\n\n\n  form = this.fb.group({\n    number: [1, Validators.compose([Validators.required, Validators.min(1), Validators.max(30)])]\n  })\n\n  ngOnInit(): void {\n    this.route.paramMap\n      .subscribe(p => this.findFood(p.get(\"foodId\")))\n  }\n\n  private findFood = (foodId: string | null) => {\n    this.foodId = foodId ?? 'not passed';\n\n    this.foodService.findFood({ id: this.foodId })\n      .subscribe(food => this.food = food,\n        this.handleError)\n\n    console.log(this.foodId)\n   }\n\n  private handleError = (err: any) => {\n\n    if (err.status == 404) {\n      alert(\"Food not found!\")\n      //this.router.navigate(['/search-flights'])\n    }\n\n\n    if (err.status == 409) {\n      console.log(\"err: \" + err);\n      alert(JSON.parse(err.error).message)\n    }\n\n    console.log(\"Response Error. Status: \", err.status)\n    console.log(\"Response Error. Status Text: \", err.statusText)\n    console.log(err)\n  }\n\n  buy() {\n  }\n\n  get number() {\n    return this.form.controls.number\n  }\n}\n","<div class=\"container\">\n\n    <div class=\"card mb-3\" style=\"max-width: 100%;\">\n        <div class=\"row g-0\">\n            <div class=\"col-md-4\">\n                <img [src]=\"food.imageUrl\" class=\"img-fluid rounded-start\" [alt]=\"food.name\">\n            </div>\n\n            <div class=\"col-md-8\">\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\"> {{ food.name }} </h5>\n                    <p class=\"card-text\"> {{ food.description }} </p>\n                    <p class=\"card-text\"> It will be preperad in {{ food.preperationTime }} minutes </p>\n                    <p class=\"card-text\">  $ {{ food.price }} </p>\n                </div>\n\n                <div class=\"card-body\">\n                    <form [formGroup]=\"form\" (ngSubmit)=\"buy()\">\n                        <label class=\"form-label mt-5\" for=\"numberOfOrders\">Number of Orders</label>\n\n                        <input formControlName=\"number\"\n                               type=\"number\" class=\"form-control\"\n                               id=\"numberOfOrders\" name=\"numberOfOrders\"\n                               style=\"max-width: 30%;\"\n                               placeholder=\"Number of Orders\" />\n                        <button type=\"submit\" class=\"btn btn-primary\">\n                            <i class=\"fas fa-food\"></i>\n                            Buy\n                        </button>\n                    </form>\n                </div>\n\n            </div>\n\n\n            \n\n\n        </div>\n    </div>\n\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}