{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet BuyFoodComponent = class BuyFoodComponent {\n  constructor(route, foodService, fb) {\n    this.route = route;\n    this.foodService = foodService;\n    this.fb = fb;\n    this.foodId = 'not loaded';\n    this.food = {};\n    this.form = this.fb.group({\n      number: [1, Validators.compose([Validators.required, Validators.min(1), Validators.max(30)])]\n    });\n    this.findFood = foodId => {\n      this.foodId = foodId ?? 'not passed';\n      this.foodService.findFood({\n        id: this.foodId\n      }).subscribe(food => this.food = food, this.handleError);\n      console.log(this.foodId);\n    };\n    this.handleError = err => {\n      if (err.status == 404) {\n        alert(\"Food not found!\");\n        //this.router.navigate(['/search-flights'])\n      }\n\n      if (err.status == 409) {\n        console.log(\"err: \" + err);\n        alert(JSON.parse(err.error).message);\n      }\n      console.log(\"Response Error. Status: \", err.status);\n      console.log(\"Response Error. Status Text: \", err.statusText);\n      console.log(err);\n    };\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(p => this.findFood(p.get(\"foodId\")));\n  }\n  buy() {}\n  get number() {\n    return this.form.controls.number;\n  }\n};\nBuyFoodComponent = __decorate([Component({\n  selector: 'app-buy-food',\n  templateUrl: './buy-food.component.html',\n  styleUrls: ['./buy-food.component.css']\n})], BuyFoodComponent);\nexport { BuyFoodComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAIjD,SAAsBC,UAAU,QAAQ,gBAAgB;AAQjD,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAM3BC,YAAoBC,KAAqB,EAC/BC,WAAwB,EACxBC,EAAe;IAFL,UAAK,GAALF,KAAK;IACf,gBAAW,GAAXC,WAAW;IACX,OAAE,GAAFC,EAAE;IANZ,WAAM,GAAW,YAAY;IAC7B,SAAI,GAAW,EAAE;IAQjB,SAAI,GAAG,IAAI,CAACA,EAAE,CAACC,KAAK,CAAC;MACnBC,MAAM,EAAE,CAAC,CAAC,EAAEP,UAAU,CAACQ,OAAO,CAAC,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACU,GAAG,CAAC,CAAC,CAAC,EAAEV,UAAU,CAACW,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;KAC7F,CAAC;IAOM,aAAQ,GAAIC,MAAqB,IAAI;MAC3C,IAAI,CAACA,MAAM,GAAGA,MAAM,IAAI,YAAY;MAEpC,IAAI,CAACR,WAAW,CAACS,QAAQ,CAAC;QAAEC,EAAE,EAAE,IAAI,CAACF;MAAM,CAAE,CAAC,CAC3CG,SAAS,CAACC,IAAI,IAAI,IAAI,CAACA,IAAI,GAAGA,IAAI,EACjC,IAAI,CAACC,WAAW,CAAC;MAErBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,MAAM,CAAC;IACzB,CAAC;IAEM,gBAAW,GAAIQ,GAAQ,IAAI;MAEjC,IAAIA,GAAG,CAACC,MAAM,IAAI,GAAG,EAAE;QACrBC,KAAK,CAAC,iBAAiB,CAAC;QACxB;;;MAIF,IAAIF,GAAG,CAACC,MAAM,IAAI,GAAG,EAAE;QACrBH,OAAO,CAACC,GAAG,CAAC,OAAO,GAAGC,GAAG,CAAC;QAC1BE,KAAK,CAACC,IAAI,CAACC,KAAK,CAACJ,GAAG,CAACK,KAAK,CAAC,CAACC,OAAO,CAAC;;MAGtCR,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEC,GAAG,CAACC,MAAM,CAAC;MACnDH,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEC,GAAG,CAACO,UAAU,CAAC;MAC5DT,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;IAClB,CAAC;EAtC8B;EAO/BQ,QAAQ;IACN,IAAI,CAACzB,KAAK,CAAC0B,QAAQ,CAChBd,SAAS,CAACe,CAAC,IAAI,IAAI,CAACjB,QAAQ,CAACiB,CAAC,CAACC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;EACnD;EA8BAC,GAAG,IACH;EAEA,IAAIzB,MAAM;IACR,OAAO,IAAI,CAAC0B,IAAI,CAACC,QAAQ,CAAC3B,MAAM;EAClC;CACD;AAtDYN,gBAAgB,eAL5BF,SAAS,CAAC;EACToC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACWpC,gBAAgB,CAsD5B;SAtDYA,gBAAgB","names":["Component","Validators","BuyFoodComponent","constructor","route","foodService","fb","group","number","compose","required","min","max","foodId","findFood","id","subscribe","food","handleError","console","log","err","status","alert","JSON","parse","error","message","statusText","ngOnInit","paramMap","p","get","buy","form","controls","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Desktop/Chef/Chef/ClientApp/src/app/buy-food/buy-food.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FoodService } from '../api/services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FoodRm } from '../api/models';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-buy-food',\n  templateUrl: './buy-food.component.html',\n  styleUrls: ['./buy-food.component.css']\n})\nexport class BuyFoodComponent implements OnInit {\n\n  foodId: string = 'not loaded';\n  food: FoodRm = {};\n\n\n  constructor(private route: ActivatedRoute,\n    private foodService: FoodService,\n    private fb: FormBuilder  ) { }\n\n\n  form = this.fb.group({\n    number: [1, Validators.compose([Validators.required, Validators.min(1), Validators.max(30)])]\n  })\n\n  ngOnInit(): void {\n    this.route.paramMap\n      .subscribe(p => this.findFood(p.get(\"foodId\")))\n  }\n\n  private findFood = (foodId: string | null) => {\n    this.foodId = foodId ?? 'not passed';\n\n    this.foodService.findFood({ id: this.foodId })\n      .subscribe(food => this.food = food,\n        this.handleError)\n\n    console.log(this.foodId)\n   }\n\n  private handleError = (err: any) => {\n\n    if (err.status == 404) {\n      alert(\"Food not found!\")\n      //this.router.navigate(['/search-flights'])\n    }\n\n\n    if (err.status == 409) {\n      console.log(\"err: \" + err);\n      alert(JSON.parse(err.error).message)\n    }\n\n    console.log(\"Response Error. Status: \", err.status)\n    console.log(\"Response Error. Status Text: \", err.statusText)\n    console.log(err)\n  }\n\n  buy() {\n  }\n\n  get number() {\n    return this.form.controls.number\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}